{
  "components": {
    "schemas": {
      "Acceleration": {
        "additionalProperties": false,
        "properties": {
          "extensions": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "status": { "type": "string" }
        },
        "type": "object"
      },
      "ActionLog": {
        "additionalProperties": false,
        "properties": {
          "event_time": { "format": "date-time", "type": "string" },
          "id": { "type": "string" },
          "payload": { "$ref": "#/components/schemas/RequestInfo" },
          "user_id": { "type": "string" }
        },
        "required": ["id", "payload", "user_id", "event_time"],
        "type": "object"
      },
      "AddOn": {
        "additionalProperties": false,
        "properties": {
          "count": { "format": "int32", "type": ["integer", "null"] },
          "name": { "type": "string" }
        },
        "required": ["name", "count"],
        "type": "object"
      },
      "AddOnFeature": {
        "additionalProperties": false,
        "properties": {
          "count": { "format": "int32", "type": "integer" },
          "name": { "type": "string" },
          "package_size": { "format": "int32", "type": "integer" },
          "price_id": { "type": "string" }
        },
        "required": ["name", "price_id"],
        "type": "object"
      },
      "AddOnFeatureInfo": {
        "additionalProperties": false,
        "properties": {
          "feature_name": { "type": "string" },
          "package_size": { "format": "int32", "type": "integer" },
          "single_item_price": { "format": "double", "type": "number" }
        },
        "required": ["feature_name", "single_item_price"],
        "type": "object"
      },
      "AddPackageReqBody": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "enum": ["default", "comodo", "crs"],
            "examples": ["comodo"],
            "type": "string"
          }
        },
        "required": ["id"],
        "type": "object"
      },
      "AttackReportItem": {
        "additionalProperties": false,
        "properties": {
          "alerts": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "attacker_country": { "type": "string" },
          "attacker_ip": { "type": "string" },
          "cookie": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "host": { "items": { "type": "string" }, "type": ["array", "null"] },
          "method": { "type": "string" },
          "timestamp": { "format": "date-time", "type": "string" },
          "uri": { "type": "string" },
          "uri_args": { "type": "string" },
          "user_agent": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "AttackReportMap": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/AttackReportMapCharts" },
          "lists": {
            "items": {
              "$ref": "#/components/schemas/AttackReportMapStatisticsInner"
            },
            "type": ["array", "null"]
          },
          "statistics": {
            "items": {
              "$ref": "#/components/schemas/AttackReportMapStatisticsInner"
            },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "AttackReportMapCharts": {
        "additionalProperties": false,
        "properties": {
          "attacks": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AttackReportMapChartsAttacksValue"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AttackReportMapChartsAttacksValue": {
        "additionalProperties": false,
        "properties": {
          "fillKey": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "value": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "AttackReportMapStatisticsInner": {
        "additionalProperties": false,
        "properties": {
          "attack": { "format": "int64", "type": "integer" },
          "code": { "type": "string" },
          "country": { "type": "string" },
          "name": { "type": "string" }
        },
        "type": "object"
      },
      "AttackReportStatistics": {
        "additionalProperties": false,
        "properties": {
          "attacks": {
            "$ref": "#/components/schemas/DnsRequestReportStatistics"
          }
        },
        "type": "object"
      },
      "AttackReportUri": {
        "additionalProperties": false,
        "properties": {
          "count": { "format": "int64", "type": "integer" },
          "uri": { "type": "string" }
        },
        "type": "object"
      },
      "AttacksReportCharts": {
        "additionalProperties": false,
        "properties": {
          "attacks": {
            "items": { "$ref": "#/components/schemas/AttacksReportData" },
            "type": ["array", "null"]
          }
        },
        "required": ["attacks"],
        "type": "object"
      },
      "AttacksReportData": {
        "additionalProperties": false,
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "total": { "format": "int64", "type": "integer" }
        },
        "required": ["total"],
        "type": "object"
      },
      "AuthenticationMethod": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" }
        },
        "required": ["id", "type"],
        "type": "object"
      },
      "CachingPurge": {
        "additionalProperties": false,
        "properties": {
          "purge": { "type": "string" },
          "purge_tags": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "purge_urls": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          }
        },
        "required": ["purge"],
        "type": "object"
      },
      "ChallengeAction": {
        "additionalProperties": false,
        "properties": {
          "https_only": { "type": "boolean" },
          "mode": { "format": "int32", "type": "integer" },
          "ttl": { "format": "int32", "type": "integer" }
        },
        "type": "object"
      },
      "ChangeRateLimitPriorityRequestBody": {
        "additionalProperties": false,
        "properties": {
          "after_rule_id": { "type": "string" },
          "before_rule_id": { "type": "string" },
          "rule_id": { "type": "string" }
        },
        "required": ["rule_id"],
        "type": "object"
      },
      "CloneDomain": {
        "additionalProperties": false,
        "properties": { "from": { "type": "string" } },
        "required": ["from"],
        "type": "object"
      },
      "ConfigureModuleReqBody": {
        "additionalProperties": false,
        "properties": {
          "mode": { "enum": ["off", "detect", "protect"], "type": "string" }
        },
        "required": ["mode"],
        "type": "object"
      },
      "ConvertedCacheSettings": {
        "additionalProperties": false,
        "properties": {
          "cache_arg": { "type": "string" },
          "cache_args": { "type": "boolean" },
          "cache_browser": { "type": "string" },
          "cache_bypass_on_cookie": { "type": "boolean" },
          "cache_consistent_uptime": { "type": "boolean" },
          "cache_cookie": { "type": "string" },
          "cache_developer_mode": { "type": "boolean" },
          "cache_max_age": { "type": "string" },
          "cache_max_size": { "format": "int32", "type": "integer" },
          "cache_page_any": { "type": "string" },
          "cache_status": { "type": "string" }
        },
        "type": "object"
      },
      "ConvertedDomainWafPackage": {
        "additionalProperties": false,
        "properties": {
          "disabled_rules": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "disabled_rulesets": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "id": { "type": "string" },
          "is_enabled": { "type": "boolean" },
          "name": { "type": "string" },
          "params": { "additionalProperties": {}, "type": "object" },
          "params_schema": { "additionalProperties": {}, "type": "object" },
          "provider": { "$ref": "#/components/schemas/WafPackageProvider" }
        },
        "type": "object"
      },
      "ConvertedDomainWafPackageDetails": {
        "additionalProperties": false,
        "properties": {
          "disabled_rules": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "disabled_rulesets": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "params_schema": { "additionalProperties": {}, "type": "object" },
          "provider": { "$ref": "#/components/schemas/WafPackageProvider" },
          "rulesets": {
            "items": { "$ref": "#/components/schemas/WafRuleset" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "ConvertedDynamicFieldValue": {
        "additionalProperties": false,
        "properties": {
          "desc": { "type": "string" },
          "value": { "type": "string" }
        },
        "type": "object"
      },
      "ConvertedLoadBalancerRegion": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "region": { "type": "string" }
        },
        "type": "object"
      },
      "ConvertedPageRule": {
        "additionalProperties": false,
        "properties": {
          "acceleration": { "$ref": "#/components/schemas/Acceleration" },
          "cache_any": { "type": "string" },
          "cache_arg": { "type": "string" },
          "cache_args": { "type": "boolean" },
          "cache_browser": { "type": "string" },
          "cache_by_device_type": { "type": "boolean" },
          "cache_bypass_on_cookie": { "type": "boolean" },
          "cache_cookie": { "type": "string" },
          "cache_ignore_vary": { "type": "boolean" },
          "cache_level": { "type": "string" },
          "cache_max_age": { "type": "string" },
          "change_host_header_for_cname_records": { "type": "string" },
          "cors_header": { "type": "string" },
          "created_at": { "format": "date-time", "type": "string" },
          "domain_id": { "type": "string" },
          "edge_compute_id": { "type": "string" },
          "id": { "type": "string" },
          "image_resize": {
            "$ref": "#/components/schemas/PageRuleImageResize"
          },
          "is_protected": { "type": "boolean" },
          "load_balancer": { "$ref": "#/components/schemas/NullableString" },
          "origin_cache_control": { "type": "boolean" },
          "redirect": { "$ref": "#/components/schemas/PageRuleRedirect" },
          "req_custom_headers": {
            "items": { "additionalProperties": {}, "type": "object" },
            "type": ["array", "null"]
          },
          "req_hide_headers": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "res_custom_headers": {
            "items": { "additionalProperties": {}, "type": "object" },
            "type": ["array", "null"]
          },
          "res_hide_headers": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "rewrite_url": { "type": "string" },
          "seq": { "format": "int32", "type": "integer" },
          "set_upstream_timeout": {
            "$ref": "#/components/schemas/UpstreamTimeout"
          },
          "slink_md5": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "slink_secret": { "type": "string" },
          "slink_status": { "type": "boolean" },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" },
          "url": { "type": "string" },
          "waf_status": { "type": "boolean" }
        },
        "type": "object"
      },
      "ConvertedWafPackage": {
        "additionalProperties": false,
        "properties": {
          "disabled_rules": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "disabled_rulesets": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "params_schema": { "additionalProperties": {}, "type": "object" },
          "provider": { "$ref": "#/components/schemas/WafPackageProvider" }
        },
        "type": "object"
      },
      "ConvertedWafPackageDetails": {
        "additionalProperties": false,
        "properties": {
          "disabled_rules": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "disabled_rulesets": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "params_schema": { "additionalProperties": {}, "type": "object" },
          "provider": { "$ref": "#/components/schemas/WafPackageProvider" },
          "rulesets": {
            "items": { "$ref": "#/components/schemas/WafRuleset" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "ConvertedWafPresets": {
        "additionalProperties": false,
        "properties": {
          "packages": {
            "items": { "$ref": "#/components/schemas/ConvertedWafPackage" },
            "type": ["array", "null"]
          },
          "presets": {
            "items": { "$ref": "#/components/schemas/WafPreset" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "CountriesResponse": {
        "additionalProperties": false,
        "properties": {
          "alpha2Code": { "type": "string" },
          "callingCodes": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "flag": { "type": "string" },
          "name": { "type": "string" }
        },
        "required": ["name", "alpha2Code", "callingCodes", "flag"],
        "type": "object"
      },
      "CountryList": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "country": { "type": "string" },
          "requests": { "format": "int64", "type": "integer" },
          "traffics": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "CountryRequestChart": {
        "additionalProperties": false,
        "properties": {
          "fillKey": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "value": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "CountryStatistics": {
        "additionalProperties": false,
        "properties": {
          "country": { "type": "string" },
          "requests": { "format": "int64", "type": "integer" },
          "traffics": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "CountryTrafficChart": {
        "additionalProperties": false,
        "properties": {
          "fillKey": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "value": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "CreateDomainRequestBody": {
        "additionalProperties": false,
        "properties": {
          "domain": { "type": "string" },
          "domain_type": { "type": "string" }
        },
        "required": ["domain"],
        "type": "object"
      },
      "CreateMFAEnrollmentTicketResp": {
        "additionalProperties": false,
        "properties": { "enrollment_url": { "type": "string" } },
        "required": ["enrollment_url"],
        "type": "object"
      },
      "CustomCname": {
        "additionalProperties": false,
        "properties": { "address": { "type": "string" } },
        "required": ["address"],
        "type": "object"
      },
      "CustomPage": {
        "additionalProperties": false,
        "properties": {
          "status_code": { "format": "int32", "type": "integer" },
          "type": { "type": "string" },
          "url": { "type": "string" }
        },
        "type": "object"
      },
      "CustomPages": {
        "additionalProperties": false,
        "properties": {
          "ddos_captcha": { "$ref": "#/components/schemas/CustomPage" },
          "ddos_js": { "$ref": "#/components/schemas/CustomPage" },
          "error_500": { "$ref": "#/components/schemas/CustomPage" },
          "firewall_error": { "$ref": "#/components/schemas/CustomPage" },
          "rate_limit_exceeded": { "$ref": "#/components/schemas/CustomPage" },
          "secure_link_expired": { "$ref": "#/components/schemas/CustomPage" },
          "secure_link_invalid": { "$ref": "#/components/schemas/CustomPage" },
          "under_construction": { "$ref": "#/components/schemas/CustomPage" },
          "waf_protection": { "$ref": "#/components/schemas/CustomPage" }
        },
        "type": "object"
      },
      "DNSRecordResponse": {
        "additionalProperties": false,
        "properties": {
          "cloud": { "type": "boolean" },
          "created_at": { "format": "date-time", "type": "string" },
          "id": { "type": "string" },
          "ip_filter_mode": {
            "$ref": "#/components/schemas/DnsRecordIpFilterMode"
          },
          "is_protected": { "type": "boolean" },
          "name": { "type": "string" },
          "ttl": { "format": "int32", "type": "integer" },
          "type": { "type": "string" },
          "updated_at": { "format": "date-time", "type": "string" },
          "upstream_https": { "type": "string" },
          "usage": { "items": { "type": "string" }, "type": ["array", "null"] },
          "value": { "items": {}, "type": ["array", "null"] }
        },
        "type": "object"
      },
      "DNSReportCharts": {
        "additionalProperties": false,
        "properties": {
          "requests": {
            "items": { "$ref": "#/components/schemas/DNSReportData" },
            "type": ["array", "null"]
          }
        },
        "required": ["requests"],
        "type": "object"
      },
      "DNSReportData": {
        "additionalProperties": false,
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "total": { "format": "int64", "type": "integer" }
        },
        "required": ["total"],
        "type": "object"
      },
      "DefaultFeature": {
        "additionalProperties": false,
        "properties": {
          "count": { "format": "int32", "type": "integer" },
          "name": { "type": "string" },
          "values": {
            "items": { "$ref": "#/components/schemas/FeatureValue" },
            "type": "array"
          }
        },
        "required": ["name"],
        "type": "object"
      },
      "DeleteAuthMethodResp": {
        "additionalProperties": false,
        "type": "object"
      },
      "DnsGeoReport": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/DnsGeoReportCharts" },
          "lists": {
            "items": { "$ref": "#/components/schemas/DnsGeoReportListsInner" },
            "type": ["array", "null"]
          },
          "statistics": { "items": {}, "type": ["array", "null"] }
        },
        "type": "object"
      },
      "DnsGeoReportCharts": {
        "additionalProperties": false,
        "properties": {
          "requests": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DnsGeoReportChartsRequestsValue"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DnsGeoReportChartsRequestsValue": {
        "additionalProperties": false,
        "properties": {
          "fillKey": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "value": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "DnsGeoReportListsInner": {
        "additionalProperties": false,
        "properties": {
          "code": { "type": "string" },
          "country": { "type": "string" },
          "name": { "type": "string" },
          "requests": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "DnsRecordIpFilterMode": {
        "additionalProperties": false,
        "properties": {
          "count": { "type": "string" },
          "geo_filter": { "type": "string" },
          "order": { "type": "string" }
        },
        "type": "object"
      },
      "DnsRequestReportStatistics": {
        "additionalProperties": false,
        "properties": {
          "top": { "format": "date-time", "type": "string" },
          "total": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "Domain": {
        "additionalProperties": false,
        "properties": {
          "billing_period_start": {
            "format": "int64",
            "type": ["integer", "null"]
          },
          "created_at": { "format": "int64", "type": "integer" },
          "ex_id": { "type": "string" },
          "features": {
            "items": { "$ref": "#/components/schemas/DomainFeature" },
            "type": ["array", "null"]
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "ns_keys": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "organization": { "$ref": "#/components/schemas/Organization" },
          "organization_id": { "type": "string" },
          "plan": { "$ref": "#/components/schemas/Plan" },
          "plan_id": { "type": "string" },
          "status": { "type": "string" },
          "subscription_id": { "type": ["string", "null"] },
          "type": { "type": "string" },
          "updated_at": { "format": "int64", "type": "integer" },
          "waf_sensitivity": { "format": "int32", "type": "integer" }
        },
        "required": [
          "ex_id",
          "name",
          "ns_keys",
          "plan_id",
          "type",
          "status",
          "organization_id",
          "plan",
          "organization",
          "features",
          "billing_period_start",
          "subscription_id",
          "waf_sensitivity",
          "id"
        ],
        "type": "object"
      },
      "DomainFeature": {
        "additionalProperties": false,
        "properties": {
          "category": { "type": "string" },
          "count": { "format": "int32", "type": ["integer", "null"] },
          "created_at": { "format": "int64", "type": "integer" },
          "domain": { "$ref": "#/components/schemas/Domain" },
          "domain_id": { "type": "string" },
          "feature_name": { "type": "string" },
          "id": { "type": "string" },
          "updated_at": { "format": "int64", "type": "integer" },
          "used_count": { "format": "int32", "type": ["integer", "null"] },
          "values": {
            "items": { "$ref": "#/components/schemas/FeatureValue" },
            "type": ["array", "null"]
          }
        },
        "required": [
          "feature_name",
          "category",
          "count",
          "used_count",
          "values",
          "domain_id",
          "domain",
          "id"
        ],
        "type": "object"
      },
      "DomainWafPackage": {
        "additionalProperties": false,
        "properties": {
          "disabled_rules": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "disabled_rulesets": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "id": { "type": "string" },
          "is_enabled": { "type": "boolean" },
          "name": { "type": "string" },
          "params": { "additionalProperties": {}, "type": "object" },
          "params_schema": { "additionalProperties": {}, "type": "object" },
          "provider": { "$ref": "#/components/schemas/WafPackageProvider" }
        },
        "type": "object"
      },
      "DynamicFieldBody": {
        "additionalProperties": false,
        "properties": {
          "description": { "type": "string" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "values": {
            "items": {
              "$ref": "#/components/schemas/ConvertedDynamicFieldValue"
            },
            "type": ["array", "null"]
          }
        },
        "required": ["name", "type", "values"],
        "type": "object"
      },
      "ErrorDetail": {
        "additionalProperties": false,
        "properties": {
          "location": {
            "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            "type": "string"
          },
          "message": { "description": "Error message text", "type": "string" },
          "value": { "description": "The value at the given location" }
        },
        "type": "object"
      },
      "ErrorLog": {
        "additionalProperties": false,
        "properties": {
          "count": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "upstreams": {
            "items": { "$ref": "#/components/schemas/ErrorLogUpstreamsInner" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "ErrorLogChartStatistics": {
        "additionalProperties": false,
        "properties": {
          "status_codes": { "additionalProperties": {}, "type": "object" }
        },
        "type": "object"
      },
      "ErrorLogUpstreamsInner": {
        "additionalProperties": false,
        "properties": {
          "address": { "type": "string" },
          "count": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "ErrorModel": {
        "additionalProperties": false,
        "properties": {
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "examples": ["Property foo is required but is missing."],
            "type": "string"
          },
          "errors": {
            "description": "Optional list of individual error details",
            "items": { "$ref": "#/components/schemas/ErrorDetail" },
            "type": ["array", "null"]
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "examples": ["https://example.com/error-log/abc123"],
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "examples": [400],
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
            "examples": ["Bad Request"],
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "A URI reference to human-readable documentation for the error.",
            "examples": ["https://example.com/errors/example"],
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorsCharts": {
        "additionalProperties": false,
        "properties": {
          "status_code": {
            "items": { "$ref": "#/components/schemas/ErrorsData" },
            "type": ["array", "null"]
          }
        },
        "required": ["status_code"],
        "type": "object"
      },
      "ErrorsData": {
        "additionalProperties": false,
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "total": { "format": "int64", "type": "integer" }
        },
        "required": ["total"],
        "type": "object"
      },
      "Feature": {
        "additionalProperties": false,
        "properties": {
          "category": { "type": "string" },
          "has_count": { "type": "boolean" },
          "has_values": { "type": "boolean" },
          "name": { "type": "string" },
          "price_ids": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "scope": { "type": "string" }
        },
        "required": [
          "name",
          "category",
          "scope",
          "price_ids",
          "has_count",
          "has_values"
        ],
        "type": "object"
      },
      "FeatureAttributes": {
        "additionalProperties": false,
        "properties": {
          "category": { "type": "string" },
          "count": { "format": "int32", "type": ["integer", "null"] },
          "used_count": { "format": "int32", "type": ["integer", "null"] },
          "values": {
            "items": { "$ref": "#/components/schemas/FeatureValue" },
            "type": ["array", "null"]
          }
        },
        "required": ["category", "count", "used_count", "values"],
        "type": "object"
      },
      "FeatureList": {
        "additionalProperties": false,
        "properties": {
          "List": {
            "items": { "$ref": "#/components/schemas/Feature" },
            "type": ["array", "null"]
          }
        },
        "required": ["List"],
        "type": "object"
      },
      "FeatureValue": {
        "additionalProperties": false,
        "properties": {
          "additional_data": {},
          "enabled": { "type": "boolean" },
          "label": { "type": "string" },
          "value": { "type": "string" }
        },
        "required": ["label", "value", "enabled"],
        "type": "object"
      },
      "File": { "additionalProperties": false, "type": "object" },
      "GetAttacksReportResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/AttacksReportCharts" },
          "statistics": {
            "$ref": "#/components/schemas/AttackReportStatistics"
          }
        },
        "type": "object"
      },
      "GetConfigurationRes": {
        "additionalProperties": false,
        "properties": {
          "is_enabled": { "type": "boolean" },
          "mode": { "type": "string" },
          "packages": {
            "items": {
              "$ref": "#/components/schemas/ConvertedDomainWafPackage"
            },
            "type": ["array", "null"]
          },
          "sensitivity": { "format": "int32", "type": "integer" }
        },
        "required": ["sensitivity"],
        "type": "object"
      },
      "GetDNSReportResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/DNSReportCharts" },
          "statistics": {
            "$ref": "#/components/schemas/DnsRequestReportStatistics"
          }
        },
        "type": "object"
      },
      "GetDNSSecStatusResponse": {
        "additionalProperties": false,
        "properties": {
          "ds": { "type": "string" },
          "enabled": { "type": "boolean" }
        },
        "type": "object"
      },
      "GetDomainTrafficResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/TrafficCharts" },
          "statistics": { "$ref": "#/components/schemas/TrafficStatistics" }
        },
        "type": "object"
      },
      "GetErrorsReportResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/ErrorsCharts" },
          "statistics": {
            "$ref": "#/components/schemas/ErrorLogChartStatistics"
          }
        },
        "type": "object"
      },
      "GetMFASettingResp": {
        "additionalProperties": false,
        "properties": {
          "authentication_methods": {
            "items": { "$ref": "#/components/schemas/AuthenticationMethod" },
            "type": ["array", "null"]
          },
          "enabled": { "type": "boolean" }
        },
        "required": ["enabled", "authentication_methods"],
        "type": "object"
      },
      "GetResponseTimeReportResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/ResponseTimeCharts" },
          "statistics": {
            "$ref": "#/components/schemas/ResponseTimeStatistics"
          }
        },
        "type": "object"
      },
      "GetSavedTrafficResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/SavedTrafficCharts" },
          "statistics": { "$ref": "#/components/schemas/SavedTrafficCharts" }
        },
        "type": "object"
      },
      "GetStatusCodeReportResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/StatusCodeCharts" },
          "statistics": {
            "$ref": "#/components/schemas/StatusCodeReportStatistics"
          }
        },
        "type": "object"
      },
      "GetUserNotificationResponse": {
        "additionalProperties": false,
        "properties": {
          "notification_list": {
            "$ref": "#/components/schemas/NotificationList"
          }
        },
        "required": ["notification_list"],
        "type": "object"
      },
      "GetUserResponse": {
        "additionalProperties": false,
        "properties": {
          "email": { "type": "string" },
          "id": { "type": "string" },
          "language": { "type": "string" },
          "name": { "type": "string" },
          "organizations": {
            "items": { "$ref": "#/components/schemas/Organization" },
            "type": ["array", "null"]
          },
          "theme": { "type": "string" },
          "time_zone": { "type": "string" }
        },
        "required": [
          "id",
          "name",
          "email",
          "language",
          "time_zone",
          "theme",
          "organizations"
        ],
        "type": "object"
      },
      "GetVisitorsReportResponse": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/VisitorsCharts" },
          "statistics": { "$ref": "#/components/schemas/VisitorsStatistics" }
        },
        "type": "object"
      },
      "HealthCheckReportDetail": {
        "additionalProperties": false,
        "properties": {
          "date": { "type": "string" },
          "message": { "type": "string" },
          "status": { "type": "boolean" },
          "upstream": { "type": "string" },
          "zone": { "type": "string" }
        },
        "type": "object"
      },
      "HealthCheckReportSummary": {
        "additionalProperties": false,
        "properties": {
          "details": {
            "items": {
              "$ref": "#/components/schemas/HealthCheckReportSummaryDetail"
            },
            "type": ["array", "null"]
          },
          "failed": { "format": "int32", "type": "integer" },
          "status": { "type": "boolean" },
          "total": { "format": "int32", "type": "integer" },
          "zone": { "type": "string" }
        },
        "type": "object"
      },
      "HealthCheckReportSummaryDetail": {
        "additionalProperties": false,
        "properties": {
          "date": { "type": "string" },
          "status": { "type": "boolean" }
        },
        "type": "object"
      },
      "HealthCheckResponse": {
        "additionalProperties": false,
        "properties": {
          "description": { "type": "string" },
          "id": { "type": "string" },
          "interval": { "format": "int32", "type": "integer" },
          "monitoring_updated_at": { "format": "date-time", "type": "string" },
          "name": { "type": "string" },
          "origin": { "type": "string" },
          "origin_type": { "type": "string" },
          "request_config": { "additionalProperties": {}, "type": "object" },
          "retries": { "format": "int32", "type": "integer" },
          "status": { "type": "boolean" },
          "threshold": { "format": "int32", "type": "integer" },
          "type": { "type": "string" },
          "upstreams": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "zone_critical": {
            "items": { "$ref": "#/components/schemas/HealthZone" },
            "type": ["array", "null"]
          },
          "zone_non_critical": {
            "items": { "$ref": "#/components/schemas/HealthZone" },
            "type": ["array", "null"]
          },
          "zone_off": {
            "items": { "$ref": "#/components/schemas/HealthZone" },
            "type": ["array", "null"]
          },
          "zone_quiet_critical": {
            "items": { "$ref": "#/components/schemas/HealthZone" },
            "type": ["array", "null"]
          }
        },
        "required": [
          "zone_critical",
          "zone_non_critical",
          "zone_quiet_critical",
          "zone_off"
        ],
        "type": "object"
      },
      "HealthCheckZoneName": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" }
        },
        "type": "object"
      },
      "HealthZone": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" }
        },
        "type": "object"
      },
      "HighRequestedIp": {
        "additionalProperties": false,
        "properties": {
          "ip": { "$ref": "#/components/schemas/HighRequestedIpIp" },
          "request_count": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "HighRequestedIpIp": { "additionalProperties": false, "type": "object" },
      "HostedPage": {
        "additionalProperties": false,
        "properties": {
          "business_entity_id": { "type": "string" },
          "checkout_info": {},
          "content": {},
          "created_at": { "format": "int64", "type": "integer" },
          "embed": { "type": "boolean" },
          "expires_at": { "format": "int64", "type": "integer" },
          "failure_reason": { "type": "string" },
          "id": { "type": "string" },
          "object": { "type": "string" },
          "pass_thru_content": { "type": "string" },
          "resource_version": { "format": "int64", "type": "integer" },
          "state": { "type": "string" },
          "type": { "type": "string" },
          "updated_at": { "format": "int64", "type": "integer" },
          "url": { "type": "string" }
        },
        "required": [
          "id",
          "type",
          "url",
          "state",
          "failure_reason",
          "pass_thru_content",
          "embed",
          "created_at",
          "expires_at",
          "content",
          "updated_at",
          "resource_version",
          "checkout_info",
          "business_entity_id",
          "object"
        ],
        "type": "object"
      },
      "HumaResponseAccelerationBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/Acceleration" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseAttackReportMapBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/AttackReportMap" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseConvertedCacheSettingsBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/ConvertedCacheSettings" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseConvertedDomainWafPackageBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/ConvertedDomainWafPackage" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseConvertedDomainWafPackageDetailsBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ConvertedDomainWafPackageDetails"
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseConvertedPageRuleBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/ConvertedPageRule" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseConvertedWafPackageDetailsBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/ConvertedWafPackageDetails" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseConvertedWafPresetsBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/ConvertedWafPresets" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseCreateMFAEnrollmentTicketRespBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateMFAEnrollmentTicketResp"
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseCustomPagesBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/CustomPages" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseDNSRecordResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/DNSRecordResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseDeleteAuthMethodRespBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/DeleteAuthMethodResp" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseDnsGeoReportBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/DnsGeoReport" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseDomainBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/Domain" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseFeatureListBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/FeatureList" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseFileBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/File" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetAttacksReportResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetAttacksReportResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetConfigurationResBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetConfigurationRes" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetDNSReportResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetDNSReportResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetDNSSecStatusResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetDNSSecStatusResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetDomainTrafficResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetDomainTrafficResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetErrorsReportResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetErrorsReportResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetFeaturesOfDomainResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FeatureAttributes"
            },
            "type": "object"
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetMFASettingRespBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetMFASettingResp" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetResponseTimeReportResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GetResponseTimeReportResponse"
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetSavedTrafficResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetSavedTrafficResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetStatusCodeReportResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GetStatusCodeReportResponse"
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetUserNotificationResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GetUserNotificationResponse"
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetUserResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetUserResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseGetVisitorsReportResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/GetVisitorsReportResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseHealthCheckResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/HealthCheckResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseHostedPageBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/HostedPage" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseImageResizeBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/ImageResize" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseIndexResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "additionalProperties": {}, "type": "object" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseInterface {}Body": {
        "additionalProperties": false,
        "properties": {
          "data": {},
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseLBPResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/LBPResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseLBResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/LBResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseLBSettingResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/LBSettingResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListActionLogBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ActionLog" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListAddOnFeatureInfoBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/AddOnFeatureInfo" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListAttackReportItemBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/AttackReportItem" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListAttackReportUriBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/AttackReportUri" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/List" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListConvertedDomainWafPackageBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ConvertedDomainWafPackage"
            },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListConvertedLoadBalancerRegionBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ConvertedLoadBalancerRegion"
            },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListCountriesResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/CountriesResponse" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListDNSRecordResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/DNSRecordResponse" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListDomainBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/Domain" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListErrorLogBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ErrorLog" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListHealthCheckReportDetailBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/HealthCheckReportDetail" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListHealthCheckReportSummaryBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/HealthCheckReportSummary"
            },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListHealthCheckResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/HealthCheckResponse" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListHealthCheckZoneNameBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/HealthCheckZoneName" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListHighRequestedIpBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/HighRequestedIp" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListLBOriginResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/LBOriginResponse" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListLBPResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/LBPResponse" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListLBResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/LBResponse" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListListBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/List" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListPageRuleSummaryBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/PageRuleSummary" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListReportsAttacksAttackers200ResponseDataInnerBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ReportsAttacksAttackers200ResponseDataInner"
            },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListSingleRuleResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/SingleRuleResponse" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseListSmartCheckerBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/SmartChecker" },
            "type": ["array", "null"]
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseLoadBalancerSettingBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/LoadBalancerSetting" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseMapStringInterface {}Body": {
        "additionalProperties": false,
        "properties": {
          "data": { "additionalProperties": {}, "type": "object" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseNsDomainBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/NsDomain" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseNullableRateLimitingRulesUpdate200ResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NullableRateLimitingRulesUpdate200Response"
          },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseOriginInfoBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/OriginInfo" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponsePageRuleDiffBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/PageRuleDiff" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponsePermissionsResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "items": { "type": "string" }, "type": ["array", "null"] },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponsePortalSessionBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/PortalSession" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseSmartCheckerBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/SmartChecker" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseStatusCodeSummaryBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/StatusCodeSummary" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseTrafficsMapBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/TrafficsMap" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseUpdateMFASettingRespBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/UpdateMFASettingResp" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseUpdateNotificationRespBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/UpdateNotificationResp" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseUpdateUserResponseBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/UpdateUserResponse" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "HumaResponseWafRuleBody": {
        "additionalProperties": false,
        "properties": {
          "data": { "$ref": "#/components/schemas/WafRule" },
          "message": { "type": "string" },
          "meta": {}
        },
        "type": "object"
      },
      "IPValue": {
        "additionalProperties": false,
        "properties": {
          "created_at": { "format": "int64", "type": "integer" },
          "desc": { "type": ["string", "null"] },
          "value": { "type": "string" }
        },
        "required": ["value", "desc"],
        "type": "object"
      },
      "ImageResize": {
        "additionalProperties": false,
        "properties": {
          "height_by": { "type": "string" },
          "mode": { "type": "string" },
          "mode_by": { "type": "string" },
          "status": { "type": "string" },
          "width_by": { "type": "string" }
        },
        "type": "object"
      },
      "ImportToDNSRecordsRequestBody": {
        "additionalProperties": false,
        "properties": { "f_zone_file": { "type": "string" } },
        "type": "object"
      },
      "LBOrigin": {
        "additionalProperties": false,
        "properties": {
          "address": { "type": "string" },
          "created_at": { "format": "date-time", "type": "string" },
          "health_check_status": { "type": "string" },
          "host_header": { "type": "string" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "port": { "format": "int32", "type": "integer" },
          "protocol": { "type": "string" },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" },
          "weight": { "format": "int32", "type": "integer" }
        },
        "type": "object"
      },
      "LBOriginResponse": {
        "additionalProperties": false,
        "properties": {
          "address": { "type": "string" },
          "created_at": { "format": "date-time", "type": "string" },
          "health_check_status": { "type": "string" },
          "host_header": { "type": "string" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "port": { "format": "int32", "type": "integer" },
          "protocol": { "type": "string" },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" },
          "weight": { "format": "int32", "type": "integer" }
        },
        "type": "object"
      },
      "LBPResponse": {
        "additionalProperties": false,
        "properties": {
          "created_at": { "format": "date-time", "type": "string" },
          "description": { "type": "string" },
          "health_check": {
            "$ref": "#/components/schemas/HealthCheckResponse"
          },
          "id": { "type": "string" },
          "keepalive": { "type": "string" },
          "method": { "type": "string" },
          "monitoring_status": { "type": "string" },
          "name": { "type": "string" },
          "next_upstream_tcp": { "type": "string" },
          "next_upstream_tcp_codes": {
            "$ref": "#/components/schemas/NextUpstreamTcpCodes"
          },
          "origins": {
            "items": { "$ref": "#/components/schemas/LBOrigin" },
            "type": ["array", "null"]
          },
          "priority": { "format": "int32", "type": "integer" },
          "regions": {
            "items": { "$ref": "#/components/schemas/LBRegion" },
            "type": ["array", "null"]
          },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" }
        },
        "type": "object"
      },
      "LBRegion": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "region": { "type": "string" }
        },
        "type": "object"
      },
      "LBResponse": {
        "additionalProperties": false,
        "properties": {
          "created_at": { "format": "date-time", "type": "string" },
          "description": { "type": "string" },
          "id": { "type": "string" },
          "method": { "type": "string" },
          "name": { "type": "string" },
          "pools": {
            "items": { "$ref": "#/components/schemas/LBPResponse" },
            "type": ["array", "null"]
          },
          "status": { "type": "boolean" },
          "time_slice": { "type": "string" },
          "updated_at": { "format": "date-time", "type": "string" }
        },
        "type": "object"
      },
      "LBSettingResponse": {
        "additionalProperties": false,
        "properties": {
          "fail_timeout": { "type": "string" },
          "keepalive": { "type": "string" },
          "max_fails": { "format": "float", "type": "number" },
          "method": { "type": "string" },
          "next_upstream_tcp": { "type": "string" },
          "next_upstream_tcp_codes": {
            "$ref": "#/components/schemas/NextUpstreamTcpCodes"
          },
          "protocol": { "type": "string" }
        },
        "type": "object"
      },
      "LinkedCustomer": {
        "additionalProperties": false,
        "properties": {
          "customer_id": { "type": "string" },
          "email": { "type": "string" },
          "has_active_subscription": { "type": "boolean" },
          "has_billing_address": { "type": "boolean" },
          "has_payment_method": { "type": "boolean" },
          "object": { "type": "string" }
        },
        "required": [
          "customer_id",
          "email",
          "has_billing_address",
          "has_payment_method",
          "has_active_subscription",
          "object"
        ],
        "type": "object"
      },
      "List": {
        "additionalProperties": false,
        "properties": {
          "count_value": { "format": "int64", "type": "integer" },
          "created_at": { "format": "int64", "type": "integer" },
          "description": { "type": "string" },
          "ex_id": { "type": "string" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "name_space": { "type": "string" },
          "organization_id": { "type": "string" },
          "scope": { "type": "string" },
          "type": { "type": "string" },
          "updated_at": { "format": "int64", "type": "integer" },
          "values": {
            "items": { "$ref": "#/components/schemas/IPValue" },
            "type": ["array", "null"]
          }
        },
        "required": ["organization_id", "count_value", "id"],
        "type": "object"
      },
      "LoadBalancer": {
        "additionalProperties": false,
        "properties": {
          "created_at": { "format": "date-time", "type": "string" },
          "description": { "type": "string" },
          "id": { "type": "string" },
          "method": { "type": "string" },
          "name": { "type": "string" },
          "pools": {
            "items": { "$ref": "#/components/schemas/LoadBalancerPool" },
            "type": ["array", "null"]
          },
          "status": { "type": "boolean" },
          "time_slice": { "type": "string" },
          "updated_at": { "format": "date-time", "type": "string" }
        },
        "type": "object"
      },
      "LoadBalancerOrigin": {
        "additionalProperties": false,
        "properties": {
          "address": { "type": "string" },
          "created_at": { "format": "date-time", "type": "string" },
          "health_check_status": { "type": "string" },
          "host_header": { "type": "string" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "port": { "format": "int32", "type": "integer" },
          "protocol": { "type": "string" },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" },
          "weight": { "format": "int32", "type": "integer" }
        },
        "type": "object"
      },
      "LoadBalancerOriginStore": {
        "additionalProperties": false,
        "properties": {
          "address": { "type": "string" },
          "host_header": { "type": "string" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "port": { "format": "int32", "type": "integer" },
          "protocol": { "type": "string" },
          "status": { "type": "boolean" },
          "weight": { "format": "int32", "type": "integer" }
        },
        "required": ["status", "address", "port", "weight", "protocol"],
        "type": "object"
      },
      "LoadBalancerPool": {
        "additionalProperties": false,
        "properties": {
          "created_at": { "format": "date-time", "type": "string" },
          "description": { "type": "string" },
          "id": { "type": "string" },
          "keepalive": { "type": "string" },
          "method": { "type": "string" },
          "monitoring_status": {
            "$ref": "#/components/schemas/NullableMonitoringStatus"
          },
          "name": { "type": "string" },
          "next_upstream_tcp": { "type": "string" },
          "next_upstream_tcp_codes": {
            "$ref": "#/components/schemas/NextUpstreamTcpCodes"
          },
          "origins": {
            "items": { "$ref": "#/components/schemas/LoadBalancerOrigin" },
            "type": ["array", "null"]
          },
          "priority": { "format": "int32", "type": "integer" },
          "regions": {
            "items": { "$ref": "#/components/schemas/LoadBalancerRegion" },
            "type": ["array", "null"]
          },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" }
        },
        "type": "object"
      },
      "LoadBalancerPoolStore": {
        "additionalProperties": false,
        "properties": {
          "description": { "type": "string" },
          "id": { "type": "string" },
          "keepalive": { "type": "string" },
          "method": { "type": "string" },
          "name": { "type": "string" },
          "next_upstream_tcp": { "type": "string" },
          "next_upstream_tcp_codes": {
            "$ref": "#/components/schemas/NextUpstreamTcpCodes"
          },
          "origins": {
            "items": { "$ref": "#/components/schemas/LoadBalancerOriginStore" },
            "type": ["array", "null"]
          },
          "priority": { "format": "int32", "type": "integer" },
          "regions": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "status": { "type": "boolean" }
        },
        "required": [
          "name",
          "status",
          "method",
          "keepalive",
          "next_upstream_tcp"
        ],
        "type": "object"
      },
      "LoadBalancerRegion": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "region": { "type": "string" }
        },
        "type": "object"
      },
      "LoadBalancerSetting": {
        "additionalProperties": false,
        "properties": {
          "fail_timeout": { "type": "string" },
          "keepalive": { "type": "string" },
          "max_fails": { "format": "float", "type": "number" },
          "method": { "type": "string" },
          "next_upstream_tcp": { "type": "string" },
          "next_upstream_tcp_codes": {
            "$ref": "#/components/schemas/NextUpstreamTcpCodes"
          },
          "protocol": { "type": "string" }
        },
        "type": "object"
      },
      "LoadBalancerStore": {
        "additionalProperties": false,
        "properties": {
          "description": { "type": "string" },
          "method": { "type": "string" },
          "name": { "type": "string" },
          "status": { "type": "boolean" },
          "time_slice": { "type": "string" }
        },
        "required": ["name", "status", "method"],
        "type": "object"
      },
      "NextUpstreamTcpCodes": {
        "additionalProperties": false,
        "properties": {
          "delete": {
            "items": { "format": "float", "type": "number" },
            "type": ["array", "null"]
          },
          "get": {
            "items": { "format": "float", "type": "number" },
            "type": ["array", "null"]
          },
          "head": {
            "items": { "format": "float", "type": "number" },
            "type": ["array", "null"]
          },
          "options": {
            "items": { "format": "float", "type": "number" },
            "type": ["array", "null"]
          },
          "patch": {
            "items": { "format": "float", "type": "number" },
            "type": ["array", "null"]
          },
          "post": {
            "items": { "format": "float", "type": "number" },
            "type": ["array", "null"]
          },
          "put": {
            "items": { "format": "float", "type": "number" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "NotificationList": {
        "additionalProperties": false,
        "properties": {
          "add_domain": { "type": "boolean" },
          "buy_plan_add_on": { "type": "boolean" },
          "delete_domain": { "type": "boolean" },
          "invoice_issued": { "type": "boolean" },
          "invoice_paid": { "type": "boolean" },
          "login_from_different_ip": { "type": "boolean" },
          "not_paid_invoice": { "type": "boolean" },
          "notify_not_active_domain": { "type": "boolean" },
          "ssl_expiration": { "type": "boolean" },
          "ssl_issued_and_ready": { "type": "boolean" },
          "user_register": { "type": "boolean" }
        },
        "type": "object"
      },
      "NsDomain": {
        "additionalProperties": false,
        "properties": {
          "ns_domain": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "ns_keys": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "NullableMonitoringStatus": {
        "additionalProperties": false,
        "type": "object"
      },
      "NullableRateLimitingRulesUpdate200Response": {
        "additionalProperties": false,
        "type": "object"
      },
      "NullableString": { "additionalProperties": false, "type": "object" },
      "Organization": {
        "additionalProperties": false,
        "properties": {
          "created_at": { "format": "int64", "type": "integer" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "ns_keys": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "owner_id": { "type": "string" },
          "permissions": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "roles": { "items": { "type": "string" }, "type": ["array", "null"] },
          "updated_at": { "format": "int64", "type": "integer" }
        },
        "required": [
          "owner_id",
          "name",
          "ns_keys",
          "roles",
          "permissions",
          "id"
        ],
        "type": "object"
      },
      "OriginInfo": {
        "additionalProperties": false,
        "properties": {
          "address": { "type": "string" },
          "created_at": { "format": "date-time", "type": "string" },
          "health_check_status": { "type": "string" },
          "host_header": { "type": "string" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "port": { "format": "int32", "type": "integer" },
          "protocol": { "type": "string" },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" },
          "weight": { "format": "int32", "type": "integer" }
        },
        "type": "object"
      },
      "PageRule": {
        "additionalProperties": false,
        "properties": {
          "acceleration": { "$ref": "#/components/schemas/Acceleration" },
          "cache_200": { "type": "string" },
          "cache_any": { "type": "string" },
          "cache_arg": { "type": "string" },
          "cache_args": { "type": "boolean" },
          "cache_browser": { "type": "string" },
          "cache_cookie": { "type": "string" },
          "cache_device_type": { "type": "boolean" },
          "cache_ignore_cc": { "type": "boolean" },
          "cache_ignore_sc": { "type": "boolean" },
          "cache_ignore_vary": { "type": "boolean" },
          "cache_level": { "type": "string" },
          "cache_scheme": { "type": "boolean" },
          "cluster_id": { "$ref": "#/components/schemas/NullableString" },
          "cluster_status": { "type": "boolean" },
          "cors_header": { "type": "string" },
          "created_at": { "format": "date-time", "type": "string" },
          "custom_host_header": { "type": "string" },
          "domain_id": { "type": "string" },
          "edge_compute_id": { "type": "string" },
          "fw_status": { "type": "boolean" },
          "id": { "type": "string" },
          "image_resize": {
            "$ref": "#/components/schemas/PageRuleImageResize"
          },
          "is_protected": { "type": "boolean" },
          "load_balancer": { "$ref": "#/components/schemas/NullableString" },
          "redirect": { "$ref": "#/components/schemas/PageRuleRedirect" },
          "req_custom_headers": {
            "items": { "additionalProperties": {}, "type": "object" },
            "type": ["array", "null"]
          },
          "req_hide_headers": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "res_custom_headers": {
            "items": { "additionalProperties": {}, "type": "object" },
            "type": ["array", "null"]
          },
          "res_hide_headers": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "rewrite_url": { "type": "string" },
          "seq": { "format": "int32", "type": "integer" },
          "slink_md5": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "slink_secret": { "type": "string" },
          "slink_status": { "type": "boolean" },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" },
          "upstream_timeout": {
            "$ref": "#/components/schemas/UpstreamTimeout"
          },
          "url": { "type": "string" },
          "url_type": { "type": "string" },
          "waf_status": { "type": "boolean" }
        },
        "type": "object"
      },
      "PageRuleDiff": {
        "additionalProperties": false,
        "properties": {
          "acceleration": { "$ref": "#/components/schemas/Acceleration" },
          "cache_200": { "type": "string" },
          "cache_any": { "type": "string" },
          "cache_arg": { "type": "string" },
          "cache_args": { "type": "boolean" },
          "cache_browser": { "type": "string" },
          "cache_cookie": { "type": "string" },
          "cache_ignore_cc": { "type": "boolean" },
          "cache_ignore_sc": { "type": "boolean" },
          "cache_ignore_vary": { "type": "boolean" },
          "cache_level": { "type": "string" },
          "cache_scheme": { "type": "boolean" },
          "cluster_id": { "$ref": "#/components/schemas/NullableString" },
          "cluster_status": { "type": "boolean" },
          "cors_header": { "type": "string" },
          "custom_host_header": { "type": "string" },
          "edge_compute_id": { "$ref": "#/components/schemas/NullableString" },
          "fw_status": { "type": "boolean" },
          "redirect": { "$ref": "#/components/schemas/PageRuleDiffRedirect" },
          "req_custom_headers": {
            "items": {
              "$ref": "#/components/schemas/PageRuleDiffReqCustomHeadersInner"
            },
            "type": ["array", "null"]
          },
          "req_hide_headers": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "res_custom_headers": {
            "items": {
              "$ref": "#/components/schemas/PageRuleDiffReqCustomHeadersInner"
            },
            "type": ["array", "null"]
          },
          "res_hide_headers": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "rewrite_url": { "type": "string" },
          "slink_md5": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "slink_secret": { "type": "string" },
          "slink_status": { "type": "boolean" },
          "status": { "type": "boolean" },
          "upstream_timeout": {
            "$ref": "#/components/schemas/UpstreamTimeout"
          },
          "url": { "type": "string" },
          "waf_status": { "type": "boolean" }
        },
        "type": "object"
      },
      "PageRuleDiffRedirect": {
        "additionalProperties": false,
        "properties": {
          "enable": { "type": "boolean" },
          "status_code": { "format": "int32", "type": "integer" },
          "url": { "$ref": "#/components/schemas/NullableString" }
        },
        "type": "object"
      },
      "PageRuleDiffReqCustomHeadersInner": {
        "additionalProperties": false,
        "properties": {
          "is_var": { "type": "boolean" },
          "name": { "type": "string" },
          "value": { "type": "string" }
        },
        "type": "object"
      },
      "PageRuleImageResize": {
        "additionalProperties": false,
        "properties": {
          "height_by": { "type": "string" },
          "mode": { "type": "string" },
          "mode_by": { "type": "string" },
          "status": { "type": "string" },
          "width_by": { "type": "string" }
        },
        "type": "object"
      },
      "PageRuleRedirect": {
        "additionalProperties": false,
        "properties": {
          "enable": { "type": "boolean" },
          "status_code": { "format": "int32", "type": "integer" },
          "url": { "$ref": "#/components/schemas/NullableString" }
        },
        "type": "object"
      },
      "PageRuleSummary": {
        "additionalProperties": false,
        "properties": {
          "acceleration": { "$ref": "#/components/schemas/Acceleration" },
          "cache_level": { "type": "string" },
          "created_at": { "format": "date-time", "type": "string" },
          "domain_id": { "type": "string" },
          "fw_status": { "type": "boolean" },
          "id": { "type": "string" },
          "is_protected": { "type": "boolean" },
          "seq": { "format": "int32", "type": "integer" },
          "slink_status": { "type": "boolean" },
          "status": { "type": "boolean" },
          "updated_at": { "format": "date-time", "type": "string" },
          "url": { "type": "string" },
          "url_type": { "type": "string" },
          "waf_status": { "type": "boolean" }
        },
        "type": "object"
      },
      "PayGFeature": {
        "additionalProperties": false,
        "properties": {
          "name": { "type": "string" },
          "price_id": { "type": "string" }
        },
        "required": ["name", "price_id"],
        "type": "object"
      },
      "Plan": {
        "additionalProperties": false,
        "properties": {
          "addon_features": {
            "items": { "$ref": "#/components/schemas/AddOnFeature" },
            "type": ["array", "null"]
          },
          "created_at": { "format": "int64", "type": "integer" },
          "default_features": {
            "items": { "$ref": "#/components/schemas/DefaultFeature" },
            "type": ["array", "null"]
          },
          "domains": {
            "items": { "$ref": "#/components/schemas/Domain" },
            "type": ["array", "null"]
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "payg_features": {
            "items": { "$ref": "#/components/schemas/PayGFeature" },
            "type": ["array", "null"]
          },
          "price_id": { "type": "string" },
          "summary": { "$ref": "#/components/schemas/PlanSummary" },
          "updated_at": { "format": "int64", "type": "integer" }
        },
        "required": ["summary", "id"],
        "type": "object"
      },
      "PlanSummary": {
        "additionalProperties": false,
        "properties": {
          "description": { "type": "string" },
          "items": {
            "items": { "$ref": "#/components/schemas/PlanSummaryItem" },
            "type": ["array", "null"]
          }
        },
        "required": ["description", "items"],
        "type": "object"
      },
      "PlanSummaryItem": {
        "additionalProperties": false,
        "properties": {
          "has_item": { "type": "boolean" },
          "item": { "type": "string" },
          "tooltip": { "type": "string" }
        },
        "required": ["item", "has_item"],
        "type": "object"
      },
      "PortalSession": {
        "additionalProperties": false,
        "properties": {
          "access_url": { "type": "string" },
          "created_at": { "format": "int64", "type": "integer" },
          "customer_id": { "type": "string" },
          "expires_at": { "format": "int64", "type": "integer" },
          "id": { "type": "string" },
          "linked_customers": {
            "items": { "$ref": "#/components/schemas/LinkedCustomer" },
            "type": ["array", "null"]
          },
          "login_at": { "format": "int64", "type": "integer" },
          "login_ipaddress": { "type": "string" },
          "logout_at": { "format": "int64", "type": "integer" },
          "logout_ipaddress": { "type": "string" },
          "object": { "type": "string" },
          "redirect_url": { "type": "string" },
          "status": { "type": "string" },
          "token": { "type": "string" }
        },
        "required": [
          "id",
          "token",
          "access_url",
          "redirect_url",
          "status",
          "created_at",
          "expires_at",
          "customer_id",
          "login_at",
          "logout_at",
          "login_ipaddress",
          "logout_ipaddress",
          "linked_customers",
          "object"
        ],
        "type": "object"
      },
      "PrioritizePool": {
        "additionalProperties": false,
        "properties": {
          "PrioritizePoolAfter": {
            "$ref": "#/components/schemas/PrioritizePoolAfter"
          },
          "PrioritizePoolBefore": {
            "$ref": "#/components/schemas/PrioritizePoolBefore"
          }
        },
        "required": ["PrioritizePoolAfter", "PrioritizePoolBefore"],
        "type": "object"
      },
      "PrioritizePoolAfter": {
        "additionalProperties": false,
        "properties": {
          "after_pool_id": { "type": "string" },
          "pool_id": { "type": "string" }
        },
        "required": ["pool_id", "after_pool_id"],
        "type": "object"
      },
      "PrioritizePoolBefore": {
        "additionalProperties": false,
        "properties": {
          "before_pool_id": { "type": "string" },
          "pool_id": { "type": "string" }
        },
        "required": ["pool_id", "before_pool_id"],
        "type": "object"
      },
      "PurchaseAddOnInputBody": {
        "additionalProperties": false,
        "properties": {
          "features": {
            "items": { "$ref": "#/components/schemas/AddOn" },
            "type": ["array", "null"]
          }
        },
        "required": ["features"],
        "type": "object"
      },
      "RateLimitRule": {
        "additionalProperties": false,
        "properties": {
          "action": { "type": "string" },
          "action_details": { "$ref": "#/components/schemas/ChallengeAction" },
          "allowed_methods": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "block_duration": { "format": "int32", "type": "integer" },
          "burst": { "format": "int32", "type": "integer" },
          "description": { "$ref": "#/components/schemas/NullableString" },
          "exclude_sources": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "is_enabled": { "type": "boolean" },
          "rate": { "format": "int32", "type": "integer" },
          "time_duration": { "format": "int32", "type": "integer" },
          "url_pattern": { "type": "string" }
        },
        "required": ["url_pattern", "rate", "time_duration"],
        "type": "object"
      },
      "ReportsAttacksAttackers200ResponseDataInner": {
        "additionalProperties": false,
        "properties": {
          "count": { "format": "int32", "type": "integer" },
          "ip": { "type": "string" }
        },
        "type": "object"
      },
      "ReprioritizeRuleRequest": {
        "additionalProperties": false,
        "properties": {
          "after_rule_id": { "type": "string" },
          "before_rule_id": { "type": "string" },
          "rule_id": { "type": "string" }
        },
        "required": ["rule_id"],
        "type": "object"
      },
      "RequestInfo": {
        "additionalProperties": false,
        "properties": {
          "http_method": { "type": "string" },
          "request_body": { "type": "string" },
          "request_metadata": {
            "$ref": "#/components/schemas/RequestMetadata"
          },
          "request_uri": { "type": "string" },
          "response": { "type": "string" },
          "response_status_code": { "format": "int64", "type": "integer" }
        },
        "required": [
          "http_method",
          "request_uri",
          "request_body",
          "request_metadata",
          "response_status_code",
          "response"
        ],
        "type": "object"
      },
      "RequestMetadata": {
        "additionalProperties": false,
        "properties": {
          "client_ip": { "type": "string" },
          "request_headers": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": ["array", "null"]
            },
            "type": "object"
          }
        },
        "required": ["client_ip", "request_headers"],
        "type": "object"
      },
      "ResponseTimeCharts": {
        "additionalProperties": false,
        "properties": {
          "response_times": {
            "items": { "$ref": "#/components/schemas/ResponseTimeData" },
            "type": ["array", "null"]
          }
        },
        "required": ["response_times"],
        "type": "object"
      },
      "ResponseTimeData": {
        "additionalProperties": false,
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "total": { "format": "double", "type": "number" }
        },
        "required": ["total"],
        "type": "object"
      },
      "ResponseTimeStatistics": {
        "additionalProperties": false,
        "properties": { "response_time": {} },
        "type": "object"
      },
      "SavedTrafficCharts": {
        "additionalProperties": false,
        "properties": {
          "request": { "$ref": "#/components/schemas/SavedTrafficData" },
          "traffic": { "$ref": "#/components/schemas/SavedTrafficData" }
        },
        "required": ["request", "traffic"],
        "type": "object"
      },
      "SavedTrafficData": {
        "additionalProperties": false,
        "properties": {
          "bypass": { "format": "double", "type": "number" },
          "miss": { "format": "double", "type": "number" },
          "saved": { "format": "double", "type": "number" },
          "total": { "format": "double", "type": "number" }
        },
        "required": ["saved", "bypass", "miss", "total"],
        "type": "object"
      },
      "SetCustomNsRecordInputBody": {
        "additionalProperties": false,
        "properties": {
          "ns_keys": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "SingleRuleResponse": {
        "additionalProperties": false,
        "properties": {
          "action": { "type": "string" },
          "description": { "type": "string" },
          "id": { "type": "string" },
          "is_enabled": { "type": "boolean" },
          "sources": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "url_pattern": { "type": "string" }
        },
        "type": "object"
      },
      "SmartChecker": {
        "additionalProperties": false,
        "properties": {
          "created_at": { "type": "string" },
          "details": {
            "items": {
              "$ref": "#/components/schemas/TroubleshootDetailsInner"
            },
            "type": ["array", "null"]
          },
          "id": { "type": "string" }
        },
        "type": "object"
      },
      "StatusCodeCharts": {
        "additionalProperties": false,
        "properties": {
          "status_code": {
            "items": { "$ref": "#/components/schemas/StatusCodeData" },
            "type": ["array", "null"]
          }
        },
        "required": ["status_code"],
        "type": "object"
      },
      "StatusCodeData": {
        "additionalProperties": false,
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "total": { "format": "double", "type": "number" }
        },
        "required": ["total"],
        "type": "object"
      },
      "StatusCodeReportStatistics": {
        "additionalProperties": false,
        "properties": {
          "status_codes": {
            "$ref": "#/components/schemas/StatusCodeReportStatisticsStatusCodes"
          }
        },
        "type": "object"
      },
      "StatusCodeReportStatisticsStatusCodes": {
        "additionalProperties": false,
        "properties": {
          "2xx_sum": { "format": "int64", "type": "integer" },
          "3xx_sum": { "format": "int64", "type": "integer" },
          "4xx_sum": { "format": "int64", "type": "integer" },
          "5xx_sum": { "format": "int64", "type": "integer" }
        },
        "type": "object"
      },
      "StatusCodeSummary": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/StatusCodeSummaryCharts" },
          "statistics": { "additionalProperties": {}, "type": "object" }
        },
        "type": "object"
      },
      "StatusCodeSummaryCharts": {
        "additionalProperties": false,
        "properties": {
          "status_code": {
            "items": {
              "$ref": "#/components/schemas/StatusCodeSummaryChartsStatusCodeInner"
            },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "StatusCodeSummaryChartsStatusCodeInner": {
        "additionalProperties": false,
        "properties": {
          "name": { "type": "string" },
          "y": { "format": "int32", "type": "integer" }
        },
        "type": "object"
      },
      "SubscribeToPlanInputBody": {
        "additionalProperties": false,
        "properties": { "plan_id": { "type": "string" } },
        "required": ["plan_id"],
        "type": "object"
      },
      "TrafficCharts": {
        "additionalProperties": false,
        "properties": {
          "requests": {
            "items": { "$ref": "#/components/schemas/TrafficData" },
            "type": ["array", "null"]
          },
          "traffics": {
            "items": { "$ref": "#/components/schemas/TrafficData" },
            "type": ["array", "null"]
          }
        },
        "required": ["requests", "traffics"],
        "type": "object"
      },
      "TrafficData": {
        "additionalProperties": false,
        "properties": {
          "bypass": { "format": "int64", "type": "integer" },
          "date": { "format": "date-time", "type": "string" },
          "miss": { "format": "int64", "type": "integer" },
          "saved": { "format": "int64", "type": "integer" },
          "total": { "format": "int64", "type": "integer" }
        },
        "required": ["total", "saved", "bypass", "miss"],
        "type": "object"
      },
      "TrafficStatistics": {
        "additionalProperties": false,
        "properties": {
          "requests": {
            "$ref": "#/components/schemas/TrafficStatisticsTraffics"
          },
          "traffics": {
            "$ref": "#/components/schemas/TrafficStatisticsTraffics"
          }
        },
        "type": "object"
      },
      "TrafficStatisticsTraffics": {
        "additionalProperties": false,
        "properties": {
          "bypass": { "format": "int64", "type": "integer" },
          "saved": { "format": "int64", "type": "integer" },
          "top": { "format": "date-time", "type": "string" },
          "total": { "format": "int64", "type": "integer" }
        },
        "required": ["saved", "top", "total"],
        "type": "object"
      },
      "TrafficsMap": {
        "additionalProperties": false,
        "properties": {
          "charts": { "$ref": "#/components/schemas/TrafficsMapCharts" },
          "lists": {
            "items": { "$ref": "#/components/schemas/CountryList" },
            "type": ["array", "null"]
          },
          "statistics": {
            "items": { "$ref": "#/components/schemas/CountryStatistics" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "TrafficsMapCharts": {
        "additionalProperties": false,
        "properties": {
          "requests": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CountryRequestChart"
            },
            "type": "object"
          },
          "traffics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CountryTrafficChart"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "TroubleshootDetailsInner": {
        "additionalProperties": false,
        "properties": {
          "details": { "type": "string" },
          "id": { "type": "string" },
          "status": { "type": "string" }
        },
        "type": "object"
      },
      "UpdateBooleanStatus": {
        "additionalProperties": false,
        "properties": { "status": { "type": "boolean" } },
        "type": "object"
      },
      "UpdateCloudStatusRequestBody": {
        "additionalProperties": false,
        "properties": { "cloud": { "type": "boolean" } },
        "required": ["cloud"],
        "type": "object"
      },
      "UpdateCustomPageRequestBody": {
        "additionalProperties": false,
        "properties": {
          "file": { "$ref": "#/components/schemas/File" },
          "page": { "type": "string" },
          "type": { "type": "string" },
          "url": { "type": "string" }
        },
        "type": "object"
      },
      "UpdateDNSSecStatusRequestBody": {
        "additionalProperties": false,
        "properties": { "enable": { "type": "boolean" } },
        "required": ["enable"],
        "type": "object"
      },
      "UpdateMFASettingReqBody": {
        "additionalProperties": false,
        "properties": { "enabled": { "type": "boolean" } },
        "required": ["enabled"],
        "type": "object"
      },
      "UpdateMFASettingResp": {
        "additionalProperties": false,
        "type": "object"
      },
      "UpdateNotificationResp": {
        "additionalProperties": false,
        "type": "object"
      },
      "UpdatePlanInputBody": {
        "additionalProperties": false,
        "properties": { "plan_id": { "type": "string" } },
        "required": ["plan_id"],
        "type": "object"
      },
      "UpdateRateLimitSettingsRequestBody": {
        "additionalProperties": false,
        "properties": {
          "ddos_detection": { "type": "boolean" },
          "exclude_sources": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          }
        },
        "required": ["ddos_detection", "exclude_sources"],
        "type": "object"
      },
      "UpdateSettingsDto": {
        "additionalProperties": false,
        "properties": {
          "language": { "type": "string" },
          "theme": { "type": "string" },
          "time_zone": { "type": "string" }
        },
        "required": ["language", "time_zone", "theme"],
        "type": "object"
      },
      "UpdateUserResponse": { "additionalProperties": false, "type": "object" },
      "UpdateWafSensitivityReqBody": {
        "additionalProperties": false,
        "properties": {
          "sensitivity": {
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
            "format": "int32",
            "type": "integer"
          }
        },
        "required": ["sensitivity"],
        "type": "object"
      },
      "UpstreamTimeout": {
        "additionalProperties": false,
        "properties": {
          "connect_timeout": { "format": "int32", "type": "integer" },
          "read_timeout": { "format": "int32", "type": "integer" },
          "send_timeout": { "format": "int32", "type": "integer" }
        },
        "type": "object"
      },
      "VisitorData": {
        "additionalProperties": false,
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "total": { "format": "int64", "type": "integer" }
        },
        "required": ["total"],
        "type": "object"
      },
      "VisitorsCharts": {
        "additionalProperties": false,
        "properties": {
          "visitors": {
            "items": { "$ref": "#/components/schemas/VisitorData" },
            "type": ["array", "null"]
          }
        },
        "required": ["visitors"],
        "type": "object"
      },
      "VisitorsStatistics": {
        "additionalProperties": false,
        "properties": {
          "visitors": {
            "$ref": "#/components/schemas/VisitorsStatisticsVisitors"
          }
        },
        "type": "object"
      },
      "VisitorsStatisticsVisitors": {
        "additionalProperties": false,
        "properties": {
          "top_visitors": { "format": "date-time", "type": "string" },
          "total_visitors": { "format": "int64", "type": "integer" }
        },
        "required": ["top_visitors", "total_visitors"],
        "type": "object"
      },
      "WafPackageProvider": {
        "additionalProperties": false,
        "properties": {
          "logo": { "type": "string" },
          "name": { "type": "string" }
        },
        "type": "object"
      },
      "WafPreset": {
        "additionalProperties": false,
        "properties": {
          "description": { "type": "string" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "packages": {
            "items": { "$ref": "#/components/schemas/WafPresetPackagesInner" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "WafPresetPackagesInner": {
        "additionalProperties": false,
        "properties": {
          "name": { "type": "string" },
          "provider": {
            "$ref": "#/components/schemas/WafPresetPackagesInnerProvider"
          }
        },
        "type": "object"
      },
      "WafPresetPackagesInnerProvider": {
        "additionalProperties": false,
        "properties": {
          "logo": { "type": "string" },
          "name": { "type": "string" }
        },
        "type": "object"
      },
      "WafReconfigure": {
        "additionalProperties": false,
        "properties": { "preset_id": { "type": "string" } },
        "type": "object"
      },
      "WafReprioritize": {
        "additionalProperties": false,
        "properties": {
          "after_package_id": { "type": "string" },
          "before_package_id": { "type": "string" },
          "package_id": { "type": "string" }
        },
        "required": ["package_id"],
        "type": "object"
      },
      "WafRule": {
        "additionalProperties": false,
        "properties": {
          "action": { "type": "string" },
          "description": { "type": "string" },
          "id": { "type": "string" },
          "is_enabled": { "type": "boolean" },
          "sources": {
            "items": { "type": "string" },
            "type": ["array", "null"]
          },
          "url_pattern": { "type": "string" }
        },
        "type": "object"
      },
      "WafRuleset": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "rules": {
            "items": { "$ref": "#/components/schemas/WafRulesetRulesInner" },
            "type": ["array", "null"]
          }
        },
        "type": "object"
      },
      "WafRulesetRulesInner": {
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "params": { "additionalProperties": {}, "type": "object" }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "JWT Auth": { "bearerFormat": "JWT", "scheme": "bearer", "type": "http" }
    }
  },
  "info": { "title": "VergeCloud CDN Services", "version": "1.0.0" },
  "openapi": "3.1.0",
  "paths": {
    "/countries": {
      "get": {
        "operationId": "get-countries",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListCountriesResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Countries",
        "tags": ["User"]
      }
    },
    "/features": {
      "get": {
        "operationId": "get-features-list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseFeatureListBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get All Features List",
        "tags": ["Features"]
      }
    },
    "/features/{domain}": {
      "get": {
        "operationId": "get-features-of-domain",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetFeaturesOfDomainResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Features Of Domain",
        "tags": ["Features"]
      }
    },
    "/payments/portal-session": {
      "get": {
        "operationId": "update-plan",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponsePortalSessionBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Creating chargebee portal session for customer",
        "tags": ["payment"]
      }
    },
    "/payments/{domain}/purchase-addon": {
      "post": {
        "operationId": "purchase-an-addon",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseAddOnInputBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseHostedPageBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Purchseing an addon",
        "tags": ["payment"]
      }
    },
    "/payments/{domain}/subscribe": {
      "post": {
        "operationId": "subscribe-to-a-plan",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeToPlanInputBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseHostedPageBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Subscribing to a plan",
        "tags": ["payment"]
      }
    },
    "/payments/{domain}/update-plan": {
      "post": {
        "operationId": "update-plan",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePlanInputBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseHostedPageBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Updating the plan of a subscription",
        "tags": ["payment"]
      }
    },
    "/users": {
      "get": {
        "operationId": "get-user-index",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseIndexResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get User Index",
        "tags": ["User"]
      }
    },
    "/users/me": {
      "get": {
        "operationId": "get-user-information",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetUserResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get User Information",
        "tags": ["User"]
      }
    },
    "/users/permissions": {
      "get": {
        "operationId": "get-user-permissions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponsePermissionsResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get User Permissions",
        "tags": ["User"]
      }
    },
    "/users/settings": {
      "post": {
        "operationId": "update-user-settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSettingsDto" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseUpdateUserResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update User Settings",
        "tags": ["User"]
      }
    },
    "/v1/acceleration/{domain}": {
      "get": {
        "operationId": "get-acceleration-setting",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseAccelerationBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Acceleration Setting",
        "tags": ["Acceleration"]
      },
      "patch": {
        "operationId": "update-acceleration-setting",
        "responses": {
          "200": { "description": "OK" },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Acceleration Setting",
        "tags": ["Acceleration"]
      }
    },
    "/v1/acceleration/{domain}/image-resize": {
      "get": {
        "operationId": "get-image-resize-setting",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseImageResizeBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Image Resize Setting",
        "tags": ["Acceleration"]
      },
      "patch": {
        "operationId": "update-image-resize-setting",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImageResize" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseImageResizeBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Image Resize Setting",
        "tags": ["Acceleration"]
      }
    },
    "/v1/actionlog/": {
      "get": {
        "operationId": "get-actionlogs-list",
        "parameters": [
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "A utc timestamp in seconds to filter the results",
            "explode": false,
            "in": "query",
            "name": "from_date",
            "schema": {
              "description": "A utc timestamp in seconds to filter the results",
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "A utc timestamp in seconds to filter the results",
            "explode": false,
            "in": "query",
            "name": "to_date",
            "schema": {
              "description": "A utc timestamp in seconds to filter the results",
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListActionLogBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Action Logs",
        "tags": ["ActionLogs"]
      }
    },
    "/v1/caching/{domain}": {
      "get": {
        "operationId": "get-cache-settings",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedCacheSettingsBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Cache Settings",
        "tags": ["Caching"]
      },
      "patch": {
        "operationId": "update-cache-settings",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertedCacheSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Cache Settings",
        "tags": ["Caching"]
      }
    },
    "/v1/caching/{domain}/purge": {
      "post": {
        "operationId": "purge-cache",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CachingPurge" }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Purge Cache",
        "tags": ["Caching"]
      }
    },
    "/v1/custom-page/{domain}": {
      "get": {
        "operationId": "get-all-custom-page",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseCustomPagesBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get All Custom Page",
        "tags": ["Custom Page"]
      },
      "post": {
        "operationId": "update-custom-page",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPageRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Custom Page",
        "tags": ["Custom Page"]
      }
    },
    "/v1/dns/{domain}/records": {
      "get": {
        "operationId": "get-dns-records",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Search term",
            "explode": false,
            "in": "query",
            "name": "search",
            "schema": { "description": "Search term", "type": "string" }
          },
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "type",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListDNSRecordResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get DNS Records",
        "tags": ["DNS"]
      },
      "post": {
        "operationId": "create-new-dns-record",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "aaaa",
                        "enum": ["aaaa", "AAAA"],
                        "type": "string"
                      },
                      "value": {
                        "items": {
                          "properties": {
                            "country": {
                              "description": "ISO 3166 alpha-2 country code",
                              "examples": ["US"],
                              "type": ["string", "null"]
                            },
                            "ip": { "format": "ipv6", "type": "string" },
                            "original_weight": {
                              "description": "This key shows itself here if the weight have been changed by Health Check.",
                              "examples": [100],
                              "readOnly": true,
                              "type": "integer"
                            },
                            "port": {
                              "maximum": 65535,
                              "minimum": 1,
                              "type": ["integer", "null"]
                            },
                            "weight": {
                              "maximum": 1000,
                              "minimum": 0,
                              "type": ["integer", "null"]
                            }
                          },
                          "required": ["ip"],
                          "title": "AAAA-RecordValue",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "AAAA-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "aname",
                        "enum": ["aname"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host_header": {
                            "enum": ["source", "dest"],
                            "type": ["string", "null"]
                          },
                          "location": {
                            "description": "A fully-qualified domain name (FQDN)",
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "required": ["location", "host_header"],
                            "title": "Fqdn",
                            "type": "string"
                          },
                          "port": {
                            "maximum": 65535,
                            "minimum": 1,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["location", "host_header"],
                        "title": "ANAME-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "ANAME-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "a",
                        "enum": ["a", "A"],
                        "type": "string"
                      },
                      "value": {
                        "items": {
                          "properties": {
                            "country": {
                              "description": "ISO 3166 alpha-2 country code",
                              "examples": ["US"],
                              "type": ["string", "null"]
                            },
                            "ip": { "format": "ipv4", "type": "string" },
                            "original_weight": {
                              "description": "This key shows itself here if the weight have been changed by Health Check.",
                              "examples": [100],
                              "readOnly": true,
                              "type": "integer"
                            },
                            "port": {
                              "maximum": 65535,
                              "minimum": 1,
                              "type": ["integer", "null"]
                            },
                            "weight": {
                              "maximum": 1000,
                              "minimum": 0,
                              "type": ["integer", "null"]
                            }
                          },
                          "required": ["ip"],
                          "title": "A-RecordValue",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "A-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "caa",
                        "enum": ["caa", "CAA"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "tag": {
                            "enum": ["issuewild", "issue", "iodef"],
                            "type": "string"
                          },
                          "value": {
                            "description": "Should be a valid domain",
                            "examples": ["example.com"],
                            "type": "string"
                          }
                        },
                        "required": ["value", "tag"],
                        "title": "CAA-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "CAA-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "cname",
                        "enum": ["cname", "CNAME"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host": {
                            "description": "A fully-qualified domain name (FQDN)",
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "required": ["location", "host_header"],
                            "title": "Fqdn",
                            "type": "string"
                          },
                          "host_header": {
                            "enum": ["source", "dest"],
                            "type": ["string", "null"]
                          },
                          "port": {
                            "maximum": 65535,
                            "minimum": 1,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["host", "host_header"],
                        "title": "CNAME-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "CNAME-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "dkim",
                        "enum": ["dkim", "DKIM"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "text": { "maxLength": 500, "type": "string" }
                        },
                        "required": ["text"],
                        "title": "DKIM-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "DKIM-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "mx",
                        "enum": ["mx", "MX"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          },
                          "priority": {
                            "maximum": 9999,
                            "minimum": 0,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["host", "priority"],
                        "title": "MX-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "MX-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "ns",
                        "enum": ["ns", "NS"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          }
                        },
                        "required": ["host"],
                        "title": "NS-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "NS-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "ptr",
                        "enum": ["ptr", "PTR"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "domain": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          }
                        },
                        "title": "PTR-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "PTR-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "spf",
                        "enum": ["spf", "SPF"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "text": { "maxLength": 500, "type": "string" }
                        },
                        "required": ["text"],
                        "title": "SPF-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "SPF-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "srv",
                        "enum": ["srv", "SRV"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "port": {
                            "maximum": 65535,
                            "minimum": 1,
                            "type": ["integer", "null"]
                          },
                          "priority": {
                            "maximum": 9999,
                            "minimum": 0,
                            "type": ["integer", "null"]
                          },
                          "target": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          },
                          "weight": {
                            "maximum": 1000,
                            "minimum": 0,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["target", "port"],
                        "title": "SRV-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "SRV-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "tlsa",
                        "enum": ["tlsa", "TLSA"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "certificate": {
                            "examples": ["1SKJND4KSID7OS9KJ21LSJ"],
                            "type": "string"
                          },
                          "matching_type": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "selector": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "usage": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          }
                        },
                        "required": [
                          "usage",
                          "certificate",
                          "selector",
                          "matching_type"
                        ],
                        "title": "TLSA-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "TLSA-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "txt",
                        "enum": ["txt", "TXT"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "text": { "maxLength": 500, "type": "string" }
                        },
                        "required": ["text"],
                        "title": "TXT-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "TXT-Record",
                    "type": "object"
                  }
                ],
                "title": "DnsRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseDNSRecordResponseBody"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create New DNS Record",
        "tags": ["DNS"]
      }
    },
    "/v1/dns/{domain}/records/import": {
      "post": {
        "operationId": "import-to-dns-records",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportToDNSRecordsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Import To DNS Records",
        "tags": ["DNS"]
      }
    },
    "/v1/dns/{domain}/records/sec": {
      "get": {
        "operationId": "get-dns-sec-status",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetDNSSecStatusResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get DNS Sec Status",
        "tags": ["DNS"]
      },
      "put": {
        "operationId": "update-dns-sec-status",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDNSSecStatusRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetDNSSecStatusResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update DNS Sec Status",
        "tags": ["DNS"]
      }
    },
    "/v1/dns/{domain}/records/{id}": {
      "delete": {
        "operationId": "delete-single-dns-record",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          },
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete Single DNS Record",
        "tags": ["DNS"]
      },
      "get": {
        "operationId": "get-single-dns-record",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          },
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseDNSRecordResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Single DNS Record",
        "tags": ["DNS"]
      },
      "put": {
        "operationId": "update-single-dns-record",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          },
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "aaaa",
                        "enum": ["aaaa", "AAAA"],
                        "type": "string"
                      },
                      "value": {
                        "items": {
                          "properties": {
                            "country": {
                              "description": "ISO 3166 alpha-2 country code",
                              "examples": ["US"],
                              "type": ["string", "null"]
                            },
                            "ip": { "format": "ipv6", "type": "string" },
                            "original_weight": {
                              "description": "This key shows itself here if the weight have been changed by Health Check.",
                              "examples": [100],
                              "readOnly": true,
                              "type": "integer"
                            },
                            "port": {
                              "maximum": 65535,
                              "minimum": 1,
                              "type": ["integer", "null"]
                            },
                            "weight": {
                              "maximum": 1000,
                              "minimum": 0,
                              "type": ["integer", "null"]
                            }
                          },
                          "required": ["ip"],
                          "title": "AAAA-RecordValue",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "AAAA-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "aname",
                        "enum": ["aname"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host_header": {
                            "enum": ["source", "dest"],
                            "type": ["string", "null"]
                          },
                          "location": {
                            "description": "A fully-qualified domain name (FQDN)",
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "required": ["location", "host_header"],
                            "title": "Fqdn",
                            "type": "string"
                          },
                          "port": {
                            "maximum": 65535,
                            "minimum": 1,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["location", "host_header"],
                        "title": "ANAME-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "ANAME-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "a",
                        "enum": ["a", "A"],
                        "type": "string"
                      },
                      "value": {
                        "items": {
                          "properties": {
                            "country": {
                              "description": "ISO 3166 alpha-2 country code",
                              "examples": ["US"],
                              "type": ["string", "null"]
                            },
                            "ip": { "format": "ipv4", "type": "string" },
                            "original_weight": {
                              "description": "This key shows itself here if the weight have been changed by Health Check.",
                              "examples": [100],
                              "readOnly": true,
                              "type": "integer"
                            },
                            "port": {
                              "maximum": 65535,
                              "minimum": 1,
                              "type": ["integer", "null"]
                            },
                            "weight": {
                              "maximum": 1000,
                              "minimum": 0,
                              "type": ["integer", "null"]
                            }
                          },
                          "required": ["ip"],
                          "title": "A-RecordValue",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "A-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "caa",
                        "enum": ["caa", "CAA"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "tag": {
                            "enum": ["issuewild", "issue", "iodef"],
                            "type": "string"
                          },
                          "value": {
                            "description": "Should be a valid domain",
                            "examples": ["example.com"],
                            "type": "string"
                          }
                        },
                        "required": ["value", "tag"],
                        "title": "CAA-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "CAA-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "cname",
                        "enum": ["cname", "CNAME"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host": {
                            "description": "A fully-qualified domain name (FQDN)",
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "required": ["location", "host_header"],
                            "title": "Fqdn",
                            "type": "string"
                          },
                          "host_header": {
                            "enum": ["source", "dest"],
                            "type": ["string", "null"]
                          },
                          "port": {
                            "maximum": 65535,
                            "minimum": 1,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["host", "host_header"],
                        "title": "CNAME-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "CNAME-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "dkim",
                        "enum": ["dkim", "DKIM"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "text": { "maxLength": 500, "type": "string" }
                        },
                        "required": ["text"],
                        "title": "DKIM-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "DKIM-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "mx",
                        "enum": ["mx", "MX"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          },
                          "priority": {
                            "maximum": 9999,
                            "minimum": 0,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["host", "priority"],
                        "title": "MX-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "MX-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "ns",
                        "enum": ["ns", "NS"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "host": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          }
                        },
                        "required": ["host"],
                        "title": "NS-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "NS-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "ptr",
                        "enum": ["ptr", "PTR"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "domain": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          }
                        },
                        "title": "PTR-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "PTR-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "spf",
                        "enum": ["spf", "SPF"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "text": { "maxLength": 500, "type": "string" }
                        },
                        "required": ["text"],
                        "title": "SPF-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "SPF-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "srv",
                        "enum": ["srv", "SRV"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "port": {
                            "maximum": 65535,
                            "minimum": 1,
                            "type": ["integer", "null"]
                          },
                          "priority": {
                            "maximum": 9999,
                            "minimum": 0,
                            "type": ["integer", "null"]
                          },
                          "target": {
                            "examples": ["cdn.example.com"],
                            "format": "hostname",
                            "maxLength": 500,
                            "pattern": "'^([a-zA-Z0-9._-])+$'",
                            "title": "HostName",
                            "type": "string"
                          },
                          "weight": {
                            "maximum": 1000,
                            "minimum": 0,
                            "type": ["integer", "null"]
                          }
                        },
                        "required": ["target", "port"],
                        "title": "SRV-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "SRV-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "tlsa",
                        "enum": ["tlsa", "TLSA"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "certificate": {
                            "examples": ["1SKJND4KSID7OS9KJ21LSJ"],
                            "type": "string"
                          },
                          "matching_type": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "selector": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "usage": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          }
                        },
                        "required": [
                          "usage",
                          "certificate",
                          "selector",
                          "matching_type"
                        ],
                        "title": "TLSA-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "TLSA-Record",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "cloud": { "default": false, "type": "boolean" },
                          "created_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "readOnly": true,
                            "type": "string"
                          },
                          "ip_filter_mode": {
                            "properties": {
                              "count": {
                                "enum": ["single", "multi"],
                                "type": "string"
                              },
                              "geo_filter": {
                                "enum": ["none", "location", "country"],
                                "type": "string"
                              },
                              "order": {
                                "enum": ["none", "weighted", "rr"],
                                "type": "string"
                              }
                            },
                            "title": "DnsRecordIpFilterMode",
                            "type": "object"
                          },
                          "is_protected": {
                            "default": false,
                            "description": "Protected records cannot be modified or deleted by user.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "name": { "maxLength": 250, "type": "string" },
                          "ttl": {
                            "enum": [
                              120, 180, 300, 600, 900, 1800, 3600, 7200, 18000,
                              43200, 86400, 172800, 432000
                            ],
                            "type": "integer"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "upstream_https": {
                            "enum": ["default", "auto", "http", "https"],
                            "type": "string"
                          },
                          "usage": {
                            "default": [],
                            "items": {
                              "enum": [
                                "transport-layer-proxy",
                                "certificate-issuance"
                              ],
                              "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                          }
                        },
                        "title": "BaseDnsRecord",
                        "type": "object"
                      }
                    ],
                    "properties": {
                      "type": {
                        "default": "txt",
                        "enum": ["txt", "TXT"],
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "text": { "maxLength": 500, "type": "string" }
                        },
                        "required": ["text"],
                        "title": "TXT-RecordValue",
                        "type": "object"
                      }
                    },
                    "title": "TXT-Record",
                    "type": "object"
                  }
                ],
                "title": "DnsRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseDNSRecordResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Single DNS Record",
        "tags": ["DNS"]
      }
    },
    "/v1/dns/{domain}/records/{id}/cloud": {
      "put": {
        "operationId": "update-cloud-status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          },
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCloudStatusRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseDNSRecordResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update-Cloud-Status",
        "tags": ["DNS"]
      }
    },
    "/v1/domains/": {
      "get": {
        "operationId": "get-all-domains",
        "parameters": [
          {
            "description": "Search term",
            "explode": false,
            "in": "query",
            "name": "search",
            "schema": { "description": "Search term", "type": "string" }
          },
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "plans",
            "schema": {
              "items": { "type": "string" },
              "type": ["array", "null"]
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "statuses",
            "schema": {
              "items": { "enum": ["active", "inactive"], "type": "string" },
              "type": ["array", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListDomainBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get All Domains",
        "tags": ["Domain"]
      },
      "post": {
        "operationId": "create-domain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create Domain",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}": {
      "delete": {
        "operationId": "delete-domain",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "id",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete Domain",
        "tags": ["Domain"]
      },
      "get": {
        "operationId": "show-domain",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseDomainBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Show Domain",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/clone": {
      "post": {
        "operationId": "clone-domain-config-from-another",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CloneDomain" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Clone Domain Config From Another",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/cname-setup/check": {
      "get": {
        "operationId": "check-cname-setup-to-find-status",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Check CName Setup To Find Status",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/cname-setup/convert": {
      "post": {
        "operationId": "convert-domain-setup-to-cname",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Convert Domain Setup To CName",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/cname-setup/custom": {
      "delete": {
        "operationId": "reset-custom-record-for-cname",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Reset Custom Record For CName",
        "tags": ["Domain"]
      },
      "put": {
        "operationId": "set-custom-record-for-cname-setup",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CustomCname" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Set Custom Record For CName Setup",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/hold": {
      "post": {
        "operationId": "hold-domain-cdn-service",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Hold Domain CDN Service",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/ns-keys": {
      "delete": {
        "operationId": "reset-custom-nameserver-keys",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseMapStringInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Reset Custom Nameserver Keys",
        "tags": ["Domain"]
      },
      "put": {
        "operationId": "set-custom-ns-records",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomNsRecordInputBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseMapStringInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Set Custom NS Records",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/ns-keys/check": {
      "get": {
        "operationId": "check-ns-for-find-domain-status",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseNsDomainBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Check NS For Find Domain Status",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/ns-keys/use-optional-keys": {
      "post": {
        "operationId": "use-optional-ns-keys",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseMapStringInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Use Optional NS Keys",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/regenerate": {
      "get": {
        "operationId": "regenerate-domain-settings-for-edge-servers",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Regenerate Domain Settings For Edge Servers",
        "tags": ["Domain"]
      }
    },
    "/v1/domains/{domain}/unhold": {
      "post": {
        "operationId": "un-hold-domain-cdn-service",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Un Hold Domain CDN Service",
        "tags": ["Domain"]
      }
    },
    "/v1/features/{domain}/addon-feature-info": {
      "get": {
        "operationId": "get-addon-feature-info",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "feature_names",
            "schema": {
              "items": { "type": "string" },
              "type": ["array", "null"]
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListAddOnFeatureInfoBody"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Addon Feature Info",
        "tags": ["Features"]
      }
    },
    "/v1/health-checks/zones": {
      "get": {
        "operationId": "get-list-of-health-check-zones",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListHealthCheckZoneNameBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of HealthCheck Zones",
        "tags": ["Health Check"]
      }
    },
    "/v1/health-checks/{domain}": {
      "get": {
        "operationId": "get-all-health-checks",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListHealthCheckResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get All Health Checks",
        "tags": ["Health Check"]
      },
      "post": {
        "operationId": "create-new-health-check",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "cloud": { "default": false, "type": "boolean" },
                      "description": { "type": "string" },
                      "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "type": "string"
                      },
                      "interval": {
                        "description": "In milliseconds",
                        "minimum": 15000,
                        "type": "integer"
                      },
                      "monitoring_updated_at": {
                        "format": "date-time",
                        "type": ["string", "null"]
                      },
                      "name": { "type": "string" },
                      "origin": {
                        "description": "can be IP/Host when type is `upstream`, otherwise it must be a valid record ID",
                        "type": "string"
                      },
                      "origin_type": { "enum": ["pool"], "type": "string" },
                      "retries": {
                        "description": "Number of immediate retries in case of a timeout",
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "status": {
                        "default": true,
                        "description": "The health-check is off or on",
                        "type": "boolean"
                      },
                      "threshold": { "minimum": 1, "type": "integer" },
                      "type": {
                        "enum": ["TCP", "HTTP", "HTTPS"],
                        "type": "string"
                      },
                      "upstreams": {
                        "items": { "examples": ["1.1.1.1"], "type": "string" },
                        "type": "array"
                      },
                      "zone_critical": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "zone_non_critical": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "zone_off": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "zone_quiet_critical": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "BaseHealthCheck",
                    "type": "object"
                  }
                ],
                "properties": {
                  "request_config": {
                    "oneOf": [
                      {
                        "properties": {
                          "allow_insecure": {
                            "description": "Allow insecure connections (e.g., skipping TLS verification)",
                            "type": "boolean"
                          },
                          "expected_response": {
                            "properties": {
                              "body": { "type": "string" },
                              "codes": {
                                "description": "List of expected http status code",
                                "items": { "type": "integer" },
                                "type": "array"
                              },
                              "headers": {
                                "additionalProperties": {
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "type": "object"
                              }
                            },
                            "title": "Expected Response",
                            "type": "object"
                          },
                          "follow_redirects": {
                            "description": "Whether to follow redirects",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "headers": {
                            "additionalProperties": { "type": "string" },
                            "description": "HTTP headers as key-value pairs",
                            "type": "object"
                          },
                          "method": {
                            "description": "HTTP method for the request, must be one of [HEAD, GET, POST, PUT]",
                            "enum": ["HEAD", "GET", "POST", "PUT"],
                            "type": "string"
                          },
                          "path": {
                            "description": "Path for the test",
                            "type": "string"
                          },
                          "port": {
                            "description": "Port number, must be between 1 and 65535",
                            "maximum": 65535,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "timeout": {
                            "description": "Timeout in milliseconds, must be between 1 and 30000",
                            "maximum": 30000,
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "method",
                          "port",
                          "path",
                          "expected_response",
                          "allow_insecure",
                          "timeout",
                          "headers"
                        ],
                        "title": "HTTP Config",
                        "type": "object"
                      },
                      {
                        "properties": {
                          "port": {
                            "description": "Port number, must be between 1 and 65535",
                            "maximum": 65535,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "timeout": {
                            "description": "Timeout in milliseconds, must be between 1 and 10000",
                            "maximum": 30000,
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "required": ["port", "timeout"],
                        "title": "TCP Config",
                        "type": "object"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseHealthCheckResponseBody"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create New Health Check",
        "tags": ["Health Check"]
      }
    },
    "/v1/health-checks/{domain}/reports/details": {
      "get": {
        "operationId": "get-details-of-reports",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "upstream",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "type",
            "schema": {
              "default": "all",
              "enum": ["all", "success", "error"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Set the direction of sorting",
            "explode": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "description": "Set the direction of sorting",
              "enum": ["desc", "asc"],
              "type": "string"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListHealthCheckReportDetailBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Details of Reports",
        "tags": ["Health Check"]
      }
    },
    "/v1/health-checks/{domain}/reports/summary": {
      "get": {
        "operationId": "get-summary-of-reports",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "upstream",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Set the direction of sorting",
            "explode": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "description": "Set the direction of sorting",
              "enum": ["desc", "asc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListHealthCheckReportSummaryBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Summary of Reports",
        "tags": ["Health Check"]
      }
    },
    "/v1/health-checks/{domain}/{health_check_id}": {
      "delete": {
        "operationId": "delete-health-check",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "health_check_id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete Health Check",
        "tags": ["Health Check"]
      },
      "get": {
        "operationId": "get-single-health-check",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "health_check_id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseHealthCheckResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Single Health Check",
        "tags": ["Health Check"]
      },
      "patch": {
        "operationId": "update-health-check",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "health_check_id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "cloud": { "default": false, "type": "boolean" },
                      "description": { "type": "string" },
                      "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "type": "string"
                      },
                      "interval": {
                        "description": "In milliseconds",
                        "minimum": 15000,
                        "type": "integer"
                      },
                      "monitoring_updated_at": {
                        "format": "date-time",
                        "type": ["string", "null"]
                      },
                      "name": { "type": "string" },
                      "origin": {
                        "description": "can be IP/Host when type is `upstream`, otherwise it must be a valid record ID",
                        "type": "string"
                      },
                      "origin_type": { "enum": ["pool"], "type": "string" },
                      "retries": {
                        "description": "Number of immediate retries in case of a timeout",
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "status": {
                        "default": true,
                        "description": "The health-check is off or on",
                        "type": "boolean"
                      },
                      "threshold": { "minimum": 1, "type": "integer" },
                      "type": {
                        "enum": ["TCP", "HTTP", "HTTPS"],
                        "type": "string"
                      },
                      "upstreams": {
                        "items": { "examples": ["1.1.1.1"], "type": "string" },
                        "type": "array"
                      },
                      "zone_critical": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "zone_non_critical": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "zone_off": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "zone_quiet_critical": {
                        "items": {
                          "properties": {
                            "id": { "type": "string" },
                            "name": {
                              "description": "The name of the health check zone. If 'id' is not provided, 'name' will be used as the 'id'.",
                              "type": "string"
                            }
                          },
                          "required": ["text"],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "BaseHealthCheck",
                    "type": "object"
                  }
                ],
                "properties": {
                  "request_config": {
                    "oneOf": [
                      {
                        "properties": {
                          "allow_insecure": {
                            "description": "Allow insecure connections (e.g., skipping TLS verification)",
                            "type": "boolean"
                          },
                          "expected_response": {
                            "properties": {
                              "body": { "type": "string" },
                              "codes": {
                                "description": "List of expected http status code",
                                "items": { "type": "integer" },
                                "type": "array"
                              },
                              "headers": {
                                "additionalProperties": {
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "type": "object"
                              }
                            },
                            "title": "Expected Response",
                            "type": "object"
                          },
                          "follow_redirects": {
                            "description": "Whether to follow redirects",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "headers": {
                            "additionalProperties": { "type": "string" },
                            "description": "HTTP headers as key-value pairs",
                            "type": "object"
                          },
                          "method": {
                            "description": "HTTP method for the request, must be one of [HEAD, GET, POST, PUT]",
                            "enum": ["HEAD", "GET", "POST", "PUT"],
                            "type": "string"
                          },
                          "path": {
                            "description": "Path for the test",
                            "type": "string"
                          },
                          "port": {
                            "description": "Port number, must be between 1 and 65535",
                            "maximum": 65535,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "timeout": {
                            "description": "Timeout in milliseconds, must be between 1 and 30000",
                            "maximum": 30000,
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "method",
                          "port",
                          "path",
                          "expected_response",
                          "allow_insecure",
                          "timeout",
                          "headers"
                        ],
                        "title": "HTTP Config",
                        "type": "object"
                      },
                      {
                        "properties": {
                          "port": {
                            "description": "Port number, must be between 1 and 65535",
                            "maximum": 65535,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "timeout": {
                            "description": "Timeout in milliseconds, must be between 1 and 10000",
                            "maximum": 30000,
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "required": ["port", "timeout"],
                        "title": "TCP Config",
                        "type": "object"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseHealthCheckResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Health Check",
        "tags": ["Health Check"]
      }
    },
    "/v1/lists": {
      "get": {
        "operationId": "get-lists-of-ip-list",
        "parameters": [
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "scope",
            "schema": { "enum": ["private", "public"], "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "type",
            "schema": { "enum": ["ip", "bytes", "number"], "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "name",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListListBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Lists of IP List",
        "tags": ["IP List"]
      },
      "post": {
        "operationId": "store-ip-list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DynamicFieldBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListBody"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Store IP List",
        "tags": ["IP List"]
      }
    },
    "/v1/lists/{list}": {
      "delete": {
        "operationId": "delete-ip-list",
        "parameters": [
          {
            "in": "path",
            "name": "list",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete IP List",
        "tags": ["IP List"]
      },
      "get": {
        "operationId": "show-ip-list",
        "parameters": [
          {
            "in": "path",
            "name": "list",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Show IP List",
        "tags": ["IP List"]
      },
      "patch": {
        "operationId": "update-ip-list",
        "parameters": [
          {
            "in": "path",
            "name": "list",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DynamicFieldBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update IP List",
        "tags": ["IP List"]
      },
      "post": {
        "operationId": "add-ip-values-to-ip-list",
        "parameters": [
          {
            "in": "path",
            "name": "list",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": { "$ref": "#/components/schemas/IPValue" },
                "type": ["array", "null"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Add IP Values To IP List",
        "tags": ["IP List"]
      }
    },
    "/v1/load-balancers/regions": {
      "get": {
        "operationId": "get-list-of-regions-for-load-balancer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListConvertedLoadBalancerRegionBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Regions For Load Balancers",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}": {
      "get": {
        "operationId": "get-list-of-load-balancers",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListLBResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Load Balancers",
        "tags": ["LoadBalancer"]
      },
      "post": {
        "operationId": "create-new-load-balancer",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoadBalancerStore" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBResponseBody"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create New Load Balancer",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}/settings": {
      "get": {
        "operationId": "get-list-of-domain-load-balancer-global-settings",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBSettingResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Domain Load Balancer Global Settings",
        "tags": ["LoadBalancer"]
      },
      "patch": {
        "operationId": "update-global-load-balancer-settings-of-domain",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoadBalancerSetting" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLoadBalancerSettingBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Global Load Balancer Settings Of Domain",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}/{load_balancer_id}": {
      "delete": {
        "operationId": "remove-load-balancer",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Remove Load Balancer",
        "tags": ["LoadBalancer"]
      },
      "get": {
        "operationId": "get-load-balancer-information",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Load Balancer Information",
        "tags": ["LoadBalancer"]
      },
      "patch": {
        "operationId": "update-load-balancer",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoadBalancer" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Load Balancer",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}/{load_balancer_id}/pools": {
      "get": {
        "operationId": "get-list-of-pools-of-a-load-balancers",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListLBPResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Pools Of A Load Balancers",
        "tags": ["LoadBalancer"]
      },
      "post": {
        "operationId": "create-new-pool-for-load-balancer",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoadBalancerPoolStore" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBPResponseBody"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create New Pool For Load Balancer",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}/{load_balancer_id}/pools/{load_balancer_pool_id}": {
      "delete": {
        "operationId": "remove-load-balancer-pool",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Remove Load Balancer Pool",
        "tags": ["LoadBalancer"]
      },
      "get": {
        "operationId": "get-load-balancer-pool-information",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBPResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Load Balancer Pool Information",
        "tags": ["LoadBalancer"]
      },
      "patch": {
        "operationId": "update-existing-load-balancer-pool-without-origins",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoadBalancerPoolStore" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBPResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Existing Load Balancer Pool Without Origins",
        "tags": ["LoadBalancer"]
      },
      "put": {
        "operationId": "update-existing-load-balancer-pool-with-origins",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoadBalancerPoolStore" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBPResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Existing Load Balancer Pool With Origins",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}/{load_balancer_id}/pools/{load_balancer_pool_id}/origins": {
      "get": {
        "operationId": "get-list-of-origins-of-a-pool",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListLBOriginResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Origins Of A Pool",
        "tags": ["LoadBalancer"]
      },
      "post": {
        "operationId": "create-origin-in-the-pool-of-the-load-balancer",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadBalancerOriginStore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseOriginInfoBody"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create Origin In The Pool Of The Load Balancer",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}/{load_balancer_id}/pools/{load_balancer_pool_id}/origins/{load_balancer_pool_origin_id}": {
      "delete": {
        "operationId": "remove-origin-from-pool-of-load-balancer",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of an origin of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_origin_id",
            "required": true,
            "schema": {
              "description": "Id of an origin of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Remove Origin From Pool Of Load Balancer",
        "tags": ["LoadBalancer"]
      },
      "get": {
        "operationId": "get-load-balancer-origin-information",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of an origin of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_origin_id",
            "required": true,
            "schema": {
              "description": "Id of an origin of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseOriginInfoBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Load Balancer Origin Information",
        "tags": ["LoadBalancer"]
      },
      "patch": {
        "operationId": "update-existing-origin-of-the-pool",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_id",
            "required": true,
            "schema": {
              "description": "Id of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Id of an origin of the pool in the load balancer",
            "in": "path",
            "name": "load_balancer_pool_origin_id",
            "required": true,
            "schema": {
              "description": "Id of an origin of the pool in the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadBalancerOriginStore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseOriginInfoBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Existing Origin Of The Pool",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/load-balancers/{domain}/{load_balancer_id}/prioritize": {
      "post": {
        "operationId": "reorder-the-priority-of-load-balancer-pools",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Id of the load balancer",
            "in": "path",
            "name": "load_balancer_id",
            "required": true,
            "schema": {
              "description": "Id of the load balancer",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PrioritizePool" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseLBResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Reorder The Priority Of Load Balancer Pools",
        "tags": ["LoadBalancer"]
      }
    },
    "/v1/page-rules/{domain}": {
      "get": {
        "operationId": "get-list-page-rules",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Search term",
            "explode": false,
            "in": "query",
            "name": "search",
            "schema": { "description": "Search term", "type": "string" }
          },
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "order",
            "schema": {
              "default": "desc",
              "enum": ["desc", "asc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListPageRuleSummaryBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Page Rules",
        "tags": ["Page Rule"]
      },
      "post": {
        "operationId": "create-page-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConvertedPageRule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedPageRuleBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create Page Rule",
        "tags": ["Page Rule"]
      }
    },
    "/v1/page-rules/{domain}/{id}": {
      "delete": {
        "operationId": "delete-page-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete Page Rule",
        "tags": ["Page Rule"]
      },
      "get": {
        "operationId": "get-page-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedPageRuleBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Page Rules",
        "tags": ["Page Rule"]
      },
      "patch": {
        "operationId": "toggle-page-rule-status",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBooleanStatus" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Toggle Page Rule Status",
        "tags": ["Page Rule"]
      },
      "put": {
        "operationId": "update-page-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConvertedPageRule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedPageRuleBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Page Rule",
        "tags": ["Page Rule"]
      }
    },
    "/v1/page-rules/{domain}/{id}/diff": {
      "get": {
        "operationId": "get-page-rule-exception",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponsePageRuleDiffBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Page Rule Exceptions",
        "tags": ["Page Rule"]
      },
      "patch": {
        "operationId": "update-page-rule-exceptions",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PageRule" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponsePageRuleDiffBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Page Rule Exceptions",
        "tags": ["Page Rule"]
      }
    },
    "/v1/page-rules/{domain}/{id}/purge": {
      "delete": {
        "operationId": "purge-page-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Purge Page Rules",
        "tags": ["Page Rule"]
      }
    },
    "/v1/rate-limit/{domain}/reprioritize": {
      "post": {
        "operationId": "change-rate-limit's-rules-priority",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRateLimitPriorityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseNullableRateLimitingRulesUpdate200ResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Change Rate-Limit's Rules Priority",
        "tags": ["Rate Limit"]
      }
    },
    "/v1/rate-limit/{domain}/rules": {
      "get": {
        "operationId": "get-rate-limit-rules",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Search term",
            "explode": false,
            "in": "query",
            "name": "search",
            "schema": { "description": "Search term", "type": "string" }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "order_by",
            "schema": { "enum": ["priority", "created_at"], "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "order_type",
            "schema": { "enum": ["desc", "asc"], "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseNullableRateLimitingRulesUpdate200ResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Rate Limit Rules",
        "tags": ["Rate Limit"]
      }
    },
    "/v1/rate-limit/{domain}/rules/{id}": {
      "get": {
        "operationId": "get-single-rate-limit-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseNullableRateLimitingRulesUpdate200ResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Single Rate Limit Rule",
        "tags": ["Rate Limit"]
      },
      "patch": {
        "operationId": "update-single-rate-limit-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RateLimitRule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseNullableRateLimitingRulesUpdate200ResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Single Rate Limit Rule",
        "tags": ["Rate Limit"]
      }
    },
    "/v1/rate-limit/{domain}/settings": {
      "get": {
        "operationId": "get-rate-limit-settings",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseNullableRateLimitingRulesUpdate200ResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Rate Limit Settings",
        "tags": ["Rate Limit"]
      },
      "patch": {
        "operationId": "update-rate-limit-settings",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRateLimitSettingsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseNullableRateLimitingRulesUpdate200ResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update Rate Limit Settings",
        "tags": ["Rate Limit"]
      }
    },
    "/v1/reports/{domain}/attacks": {
      "get": {
        "operationId": "get-report-of-attacks",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetAttacksReportResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Attacks",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/attacks/attackers": {
      "get": {
        "operationId": "get-information-of-attackers",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListReportsAttacksAttackers200ResponseDataInnerBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Information Of Attackers",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/attacks/detail": {
      "get": {
        "operationId": "get-detail-of-attacks",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListAttackReportItemBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Detail Of Attacks",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/attacks/geo-map": {
      "get": {
        "operationId": "get-reprot-of-attacks-as-geo-map",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseAttackReportMapBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Reprot Of Attacks As Geo-Map",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/attacks/uri": {
      "get": {
        "operationId": "get-list-of-urls-under-attack",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListAttackReportUriBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of URLs Under Attack",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/dns-geo": {
      "get": {
        "operationId": "get-report-of-dns-requests-as-geo-map",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseDnsGeoReportBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of DNS Requests As Geo-Map",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/dns-requests": {
      "get": {
        "operationId": "get-report-of-dns-request",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetDNSReportResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of DNS Request",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/download": {
      "get": {
        "operationId": "get-csv-file-contain-the-domains-report",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseFileBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get CSV File Contain The Domains Report",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/errors": {
      "get": {
        "operationId": "get-list-of-errors",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListErrorLogBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Errors",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/errors/chart": {
      "get": {
        "operationId": "get-list-of-errors-as-chart-view",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetErrorsReportResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Errors As Chart View",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/highest-request-ips": {
      "get": {
        "operationId": "get-report-of-highest-requests-of-ips",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListHighRequestedIpBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Highest Requests Of IPs",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/response-time": {
      "get": {
        "operationId": "get-report-of-response-time",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Select subdomain for report. @ means the root domain",
            "explode": false,
            "in": "query",
            "name": "filter[subdomain]",
            "schema": {
              "description": "Select subdomain for report. @ means the root domain",
              "pattern": "^[\\w@-]+$",
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetResponseTimeReportResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Response Time",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/status": {
      "get": {
        "operationId": "get-report-of-status-codes-pie-chart",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetStatusCodeReportResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Status Codes Pie Chart",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/status/summary": {
      "get": {
        "operationId": "get-summary-of-status-codes-pie-chart",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseStatusCodeSummaryBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Summary Of Status Codes Pie Chart",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/traffic": {
      "get": {
        "operationId": "get-report-of-domain-traffic",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Select subdomain for report. @ means the root domain",
            "explode": false,
            "in": "query",
            "name": "filter[subdomain]",
            "schema": {
              "description": "Select subdomain for report. @ means the root domain",
              "pattern": "^[\\w@-]+$",
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetDomainTrafficResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Domain Traffic",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/traffic/geo-map": {
      "get": {
        "operationId": "get-report-of-geo-map-traffic",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Select subdomain for report. @ means the root domain",
            "explode": false,
            "in": "query",
            "name": "filter[subdomain]",
            "schema": {
              "description": "Select subdomain for report. @ means the root domain",
              "pattern": "^[\\w@-]+$",
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseTrafficsMapBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Geo-Map Traffic",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/traffic/saved": {
      "get": {
        "operationId": "get-report-of_traffic-saved-into-total-pie-chart",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Select subdomain for report. @ means the root domain",
            "explode": false,
            "in": "query",
            "name": "filter[subdomain]",
            "schema": {
              "description": "Select subdomain for report. @ means the root domain",
              "pattern": "^[\\w@-]+$",
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetSavedTrafficResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Traffic Saved Into Total Pie Chart",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/transport-layer-proxies/{transport_layer_proxy_id}": {
      "get": {
        "operationId": "get-report-of-transport-layer-proxy-traffic",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Transport layer proxy id",
            "in": "path",
            "name": "tlp_id",
            "required": true,
            "schema": {
              "description": "Transport layer proxy id",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseMapStringInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Transport Layer Proxy Traffic",
        "tags": ["Report"]
      }
    },
    "/v1/reports/{domain}/visitors": {
      "get": {
        "operationId": "get-report-of-domain-visitors",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "period",
            "schema": {
              "default": "3h",
              "enum": ["1h", "3h", "6h", "12h", "24h", "7d", "30d"],
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "since",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "until",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "description": "Select subdomain for report. @ means the root domain",
            "explode": false,
            "in": "query",
            "name": "filter[subdomain]",
            "schema": {
              "description": "Select subdomain for report. @ means the root domain",
              "pattern": "^[\\w@-]+$",
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetVisitorsReportResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Report Of Domain Visitors",
        "tags": ["Report"]
      }
    },
    "/v1/smart-checker/{domain}": {
      "get": {
        "operationId": "get-list-of-smart-checker",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Set the desired page number",
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Set the desired page number",
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListSmartCheckerBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get List Of Smart Checker",
        "tags": ["Smart Checker"]
      },
      "post": {
        "operationId": "create-new-smart-checker",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseSmartCheckerBody"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create New Smart Checker",
        "tags": ["Smart Checker"]
      }
    },
    "/v1/smart-checker/{domain}/latest": {
      "get": {
        "operationId": "get-the-latest-smart-checker",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseSmartCheckerBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get The Latest Smart Checker",
        "tags": ["Smart Checker"]
      }
    },
    "/v1/users/mfa": {
      "get": {
        "operationId": "get-mfa-setting",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetMFASettingRespBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get MFA Setting",
        "tags": ["User"]
      },
      "put": {
        "operationId": "update-mfa-setting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMFASettingReqBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseUpdateMFASettingRespBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update MFA Setting",
        "tags": ["User"]
      }
    },
    "/v1/users/mfa/enrollment-ticket": {
      "post": {
        "operationId": "create-mfa-enrollment-ticket",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseCreateMFAEnrollmentTicketRespBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create MFA Enrollment Ticket",
        "tags": ["User"]
      }
    },
    "/v1/users/mfa/{authenticationMethodID}": {
      "delete": {
        "operationId": "delete-mfa-setting",
        "parameters": [
          {
            "in": "path",
            "name": "authenticationMethodID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseDeleteAuthMethodRespBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete MFA Setting",
        "tags": ["User"]
      }
    },
    "/v1/users/notification": {
      "patch": {
        "operationId": "update-user-notification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NotificationList" }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseUpdateNotificationRespBody"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update User Notification",
        "tags": ["User"]
      }
    },
    "/v1/users/{user}/notification": {
      "get": {
        "operationId": "user-notification-preferences",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetUserNotificationResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "User Notification Preferences",
        "tags": ["User"]
      }
    },
    "/v1/waf/": {
      "get": {
        "operationId": "get-waf-presets",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedWafPresetsBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Waf presets",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/packages/{id}": {
      "get": {
        "operationId": "get-waf-package-details",
        "parameters": [
          {
            "description": "waf package id",
            "example": "crs",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "waf package id",
              "enum": ["default", "comodo", "crs"],
              "examples": ["crs"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedWafPackageDetailsBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Waf Package Details",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/actions/reconfigure": {
      "post": {
        "operationId": "reconfigure-waf-module-using-preset",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WafReconfigure" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Reconfigure WAF Module Using Preset",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/actions/reprioritize": {
      "post": {
        "operationId": "change-priority-of-waf-rules",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReprioritizeRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Change Priority Of WAF Rules",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/actions/reprioritize-package": {
      "post": {
        "operationId": "change-priority-of-waf-packages",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WafReprioritize" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Change Priority Of WAF Packages",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/packages": {
      "get": {
        "operationId": "get-waf-packages",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "available",
            "schema": { "default": false, "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListConvertedDomainWafPackageBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get WAF Packages",
        "tags": ["WAF"]
      },
      "post": {
        "operationId": "add-new-waf-package",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddPackageReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedDomainWafPackageBody"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Add New WAF Package",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/packages/{id}": {
      "delete": {
        "operationId": "delete-waf-package",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "waf package id",
            "example": "crs",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "waf package id",
              "enum": ["default", "comodo", "crs"],
              "examples": ["crs"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete WAF Package",
        "tags": ["WAF"]
      },
      "get": {
        "operationId": "get-domain-waf-package-information",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "waf package id",
            "example": "crs",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "waf package id",
              "enum": ["default", "comodo", "crs"],
              "examples": ["crs"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedDomainWafPackageDetailsBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get WAF Package Information",
        "tags": ["WAF"]
      },
      "patch": {
        "operationId": "update-waf-package",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "waf package id",
            "example": "crs",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "waf package id",
              "enum": ["default", "comodo", "crs"],
              "examples": ["crs"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DomainWafPackage" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseConvertedDomainWafPackageDetailsBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update WAF Package Information",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/rules": {
      "get": {
        "operationId": "get-all-waf-rules",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "description": "Set how many items returned per page",
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Set how many items returned per page",
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "order_by",
            "schema": { "enum": ["priority", "created_at"], "type": "string" }
          },
          {
            "explode": false,
            "in": "query",
            "name": "order_type",
            "schema": { "enum": ["desc", "asc"], "type": "string" }
          },
          {
            "description": "Search term",
            "explode": false,
            "in": "query",
            "name": "search",
            "schema": { "description": "Search term", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseListSingleRuleResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get All Waf Rules",
        "tags": ["WAF"]
      },
      "post": {
        "operationId": "create-waf-rules",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WafRule" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseWafRuleBody"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Create Waf Rules",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/rules/{id}": {
      "delete": {
        "operationId": "delete-waf-rule",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Delete WAF Rule",
        "tags": ["WAF"]
      },
      "get": {
        "operationId": "get-waf-rule-information",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseWafRuleBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get WAF Rule Information",
        "tags": ["WAF"]
      },
      "patch": {
        "operationId": "update-waf-rule-information",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WafRule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseWafRuleBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update WAF Rule Information",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/settings": {
      "get": {
        "operationId": "get-waf-configuration",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetConfigurationResBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Get Waf Configuration",
        "tags": ["WAF"]
      },
      "patch": {
        "operationId": "patch-domain-waf-module",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigureModuleReqBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseGetConfigurationResBody"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "402": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Payment Required"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Configure WAF Module Of The Domain",
        "tags": ["WAF"]
      }
    },
    "/v1/waf/{domain}/waf-sensitivity": {
      "put": {
        "operationId": "update-waf-sensitivity",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "description": "Domain name",
              "examples": ["example.com"],
              "format": "hostname",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWafSensitivityReqBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumaResponseInterface {}Body"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [{ "JWT Auth": [] }],
        "summary": "Update WAF Sensitivity",
        "tags": ["WAF"]
      }
    }
  }
}
