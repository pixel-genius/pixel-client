# #!/bin/sh
# . "$(dirname "$0")/_/husky.sh"

# # Get the current branch name before rebase
# current_branch=$(git rev-parse --abbrev-ref HEAD)

# # Fetch latest changes from origin/main
# git fetch origin main

# # Count the number of commits ahead of origin/main
# commit_count=$(git rev-list --count origin/main..HEAD)

# # If more than one commit exists, abort rebase
# if [ "$commit_count" -gt 1 ]; then
#     echo "❌ Rebase aborted: More than one commit ahead of origin/main ($commit_count commits)."
#     echo "🔄 Please squash your commits first, then run 'git rebase'."
#     exit 1
# fi

# # Ensure we stay on the correct branch
# git checkout "$current_branch" 2>/dev/null || true

# echo "✅ Rebase can proceed. Only one or no commits ahead of main."