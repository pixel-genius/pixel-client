name: Pull Request Automation

on:
  pull_request:
    types: [opened, ready_for_review]

jobs:
  build-design-system:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Cache Bun dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-dependencies-

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        working-directory: ./packages/design-system
        run: bun install

      - name: Run build script
        working-directory: ./packages/design-system
        run: bun run build

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update design system tokens"
          branch: ${{ github.head_ref }}
          file_pattern: ./packages/design-system/**
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  add-reviewer:
    runs-on: ubuntu-latest
    needs: build-design-system
    steps:
      - name: Extract Issue Number from Branch
        id: extract_issue
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oE '[0-9]+' | head -1)

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "No issue number found in branch name!"
            exit 1
          fi

          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Add Reviewer
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers \
               -d '{"reviewers":["mrbadri"]}'

      - name: Add PR Description Comment
        run: |
          PR_COMMENT="This pull request is related to issue #${{ env.ISSUE_NUMBER }}\n\nCloses #${{ env.ISSUE_NUMBER }}"
          
          curl -X POST -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
               -d "{\"body\": \"$PR_COMMENT\"}"

  wait-for-approval:
    runs-on: ubuntu-latest
    needs: add-reviewer
    steps:
      - name: Wait for Approval
        id: check-approval
        run: |
          APPROVED=0
          while [ $APPROVED -eq 0 ]; do
            echo "Checking for approval..."
            REVIEWS=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews)

            if echo "$REVIEWS" | grep -q '"state": "APPROVED"'; then
              APPROVED=1
              echo "Pull request approved!"
            else
              echo "Waiting for approval..."
              sleep 60
            fi
          done

  merge-pr:
    runs-on: ubuntu-latest
    needs: wait-for-approval
    steps:
      - name: Merge Pull Request
        run: |
          curl -X PUT -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/merge \
               -d '{"merge_method":"squash"}'
